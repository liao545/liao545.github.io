{"title":"修改MAC地址","uid":"f125174ab074d2773620490648712dee","slug":"修改MAC地址","date":"2021-09-10T14:29:28.000Z","updated":"2021-10-07T07:41:32.918Z","comments":true,"path":"api/articles/修改MAC地址.json","keywords":null,"cover":[],"content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h1 id=\"通过Python修改Linux主机的MAC地址\"><a href=\"#通过Python修改Linux主机的MAC地址\" class=\"headerlink\" title=\"通过Python修改Linux主机的MAC地址\"></a>通过Python修改Linux主机的MAC地址</h1><h2 id=\"为什么要修改MAC地址\"><a href=\"#为什么要修改MAC地址\" class=\"headerlink\" title=\"为什么要修改MAC地址\"></a>为什么要修改MAC地址</h2><p>进行渗透测试时，可以修改mac地址来绕过某些验证。。。。。。。</p>\n<p><img src=\"//wx1.sinaimg.cn/mw690/0089olAbly1gtov5iui5mj608c08cq3202.jpg\"></p>\n<p>我们先来看一下MAC地址，我们输入：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ifconfig</code></pre>\n\n<p><img src=\"//wx4.sinaimg.cn/mw690/0089olAbly1gubz1f4uqij60tv0e677v02.jpg\"></p>\n<p>这个ether后面的就是我们的MAC地址，MAC地址的长度为48位(6个字节)，通常表示为12个16进制数。</p>\n<h2 id=\"通过ifconfig指令修改MAC地址\"><a href=\"#通过ifconfig指令修改MAC地址\" class=\"headerlink\" title=\"通过ifconfig指令修改MAC地址\"></a>通过ifconfig指令修改MAC地址</h2><p>先来看下如何通过ifconfig指令来修改MAC地址，输入：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ifconfig eth0 down    #用来关闭网络连接\nifconfig eth0 hw ether 00:11:22:33:44:44    #修改MAC地址为00:11:22:33:44:44\nifconfig eth0 up   #用来开启网络连接</code></pre>\n\n<p>我这里连的是无线网，所以是修改eth0，而有些人会有一个无线接口wlan0只需将eth0修改为wlan0就行了。通过以上指令我们再次输入ifconfig就会发现MAC地址已经修改完成了：</p>\n<p><img src=\"//wx1.sinaimg.cn/mw690/0089olAbly1gubz1hekcej60ts0dzad902.jpg\"></p>\n<p>这里可能会提醒你，你的权限不够只需以root权限运行指令就行了。</p>\n<h2 id=\"通过Python来完成修改MAC地址\"><a href=\"#通过Python来完成修改MAC地址\" class=\"headerlink\" title=\"通过Python来完成修改MAC地址\"></a>通过Python来完成修改MAC地址</h2><p>我们先建立一个Python文件，命名为mac_change.py。建好之后现在前面加上这两行代码：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">#!usr&#x2F;bin&#x2F;env python\n# -*- coding: utf-8 -*-</code></pre>\n\n<p>第一句是告诉系统应当如何执行这个文件，第二句是添加默认编码格式。然后我们导入第一个库：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">import subprocess</code></pre>\n\n<p>这个库是用来开启一个子进程执行我们的命令。因为我们要对MAC地址进行修改，所以这个库是必要的。</p>\n<p>非常简单只需利用它其中一个模块：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">subprocess.call(([&quot;ifconfig&quot;, &quot;eth0&quot;, &quot;down&quot;]))\nsubprocess.call(([&quot;ifconfig&quot;, &quot;eth0&quot;, &quot;hw&quot;, &quot;ether&quot;, &quot;00:11:22:33:44:55&quot;]))\nsubprocess.call(([&quot;ifconfig&quot;, &quot;eth0&quot;, &quot;up&quot;]))</code></pre>\n\n<p>然后我们直接运行程序。成功后，再次输入ifconfig：</p>\n<p><img src=\"//wx3.sinaimg.cn/mw690/0089olAbly1gubz1j93t6j60tf096jtj02.jpg\"></p>\n<p>可以看到，我们成功的利用Python程序修改了MAC地址。这是直接运行，我们也可以在终端运行：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd PycharmProjects&#x2F;mac_change&#x2F;     #先到达程序目录\n\npython3 mac_change.py          #运行程序\n\nifconfig                    #查看</code></pre>\n\n<p><img src=\"//wx1.sinaimg.cn/mw690/0089olAbly1gubz1l7zttj30tj08xacb.jpg\"></p>\n<p>可以看到，成功通过终端运行程序修改MAC地址程序。</p>\n<h2 id=\"让用户输入修改信息修改MAC地址\"><a href=\"#让用户输入修改信息修改MAC地址\" class=\"headerlink\" title=\"让用户输入修改信息修改MAC地址\"></a>让用户输入修改信息修改MAC地址</h2><p>这是我们的主要程序已经实现，但是我们想自己修改eth0和wlan0就得去修改程序。这样非常麻烦。所以我们可通过输入信息，来达到修改的目的，定义两个变量接收我们的输入：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">interface &#x3D; input(&quot;请输入要修改的接口 &gt; &quot;)\nnew_mac &#x3D; input(&quot;请输入新的MAC地址 &gt; &quot;)\n\nsubprocess.call(([&quot;ifconfig&quot;, interface, &quot;down&quot;]))\nsubprocess.call(([&quot;ifconfig&quot;, interface, &quot;hw&quot;, &quot;ether&quot;, new_mac]))\nsubprocess.call(([&quot;ifconfig&quot;, interface, &quot;up&quot;]))</code></pre>\n\n<p>再次运行：</p>\n<p><img src=\"//wx2.sinaimg.cn/mw690/0089olAbly1gubz1n7a4mj30tc08z76j.jpg\"></p>\n<p>成功完成通过输入修改MAC地址。当然这样的程序并不是太好看，我们可以通过定义函数来达到功能实现的效果：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">interface &#x3D; input(&quot;请输入要修改的接口 &gt; &quot;)\nnew_mac &#x3D; input(&quot;请输入新的MAC地址 &gt; &quot;)\n\ndef change_mac(interface,new_mac):\n    print(&quot;[+] Change MAC address for &quot; + interface + &quot; to &quot; + new_mac)\n    subprocess.call(([&quot;ifconfig&quot;, interface, &quot;down&quot;]))\n    subprocess.call(([&quot;ifconfig&quot;, interface, &quot;hw&quot;, &quot;ether&quot;, new_mac]))\n    subprocess.call(([&quot;ifconfig&quot;, interface, &quot;up&quot;]))\n\nchange_mac(interface,new_mac)</code></pre>\n\n<p>还给与了用户提示信息，再次通过终端运行它：</p>\n<p><img src=\"//wx1.sinaimg.cn/mw690/0089olAbly1gubz1pfej0j60u7092mzk02.jpg\"></p>\n<p>再次成功完成。这样看起来就有点脚本的感觉了。当然我们还可以对它进行更近一步的优化，这里就不讲了，写好的代码放在下面：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">#!usr&#x2F;bin&#x2F;env python\n# -*- coding: utf-8 -*-\n\nimport subprocess\nimport optparse\nimport re\n\n\ndef change_mac(interface, new_mac):\n    print(&quot;[+] Change MAC address for &quot; + interface + &quot; to &quot; + new_mac)\n    # 这是防止用户随意输入的方法\n    subprocess.call(([&quot;ifconfig&quot;, interface, &quot;down&quot;]))\n    subprocess.call(([&quot;ifconfig&quot;, interface, &quot;hw&quot;, &quot;ether&quot;, new_mac]))\n    subprocess.call(([&quot;ifconfig&quot;, interface, &quot;up&quot;]))\n\n\ndef get_arguments():\n    # 给予用户帮助信息\n    parser &#x3D; optparse.OptionParser()\n    parser.add_option(&quot;-i&quot;, &quot;--interface&quot;, dest&#x3D;&quot;interface&quot;, help&#x3D;&quot;Interface to change its MAC address &quot;)\n    parser.add_option(&quot;-m&quot;, &quot;--mac&quot;, dest&#x3D;&quot;new_mac&quot;, help&#x3D;&quot;New MAC address &quot;)\n    (options, arguments) &#x3D; parser.parse_args()\n    if not options.interface:\n        parser.error(&quot;[-] 请指定一个interface,或者使用--help查看帮助 &quot;)\n    elif not options.new_mac:\n        parser.error(&quot;[-] 请指定一个new_mac,或者使用--help查看帮助 &quot;)\n    return options\n\n\ndef get_current_mac(interface):\n    ifconfig_result &#x3D; subprocess.check_output([&quot;ifconfig&quot;, interface])\n    mac_address_search_result &#x3D; re.search(r&quot;\\w\\w:\\w\\w:\\w\\w:\\w\\w:\\w\\w:\\w\\w&quot;, str(ifconfig_result))\n    # str(ifconfig_result) 这是python3\n    if mac_address_search_result:\n        return mac_address_search_result.group(0)\n    else:\n        print(&quot;[-] 无法读取MAC地址&quot;)\n\n\noptions &#x3D; get_arguments()\ncurrent_mac &#x3D; get_current_mac(options.interface)\nprint(&quot;Current MAC &#x3D; &quot;+str(current_mac))\n\nchange_mac(options.interface, options.new_mac)\n\ncurrent_mac &#x3D; get_current_mac(options.interface)\nif current_mac &#x3D;&#x3D; options.new_mac:\n    print(&quot;[+] MAC地址修改成功:&quot;+current_mac)\nelse:\n    print(&quot;MAC地址修改失败&quot;)</code></pre>\n\n<p><img src=\"//wx1.sinaimg.cn/mw690/0089olAbly1gtov5zise9j607i07i0sr02.jpg\"></p>\n","text":" 通过Python修改Linux主机的MAC地址为什么要修改MAC地址进行渗透测试时，可以修改mac地址来绕过某些验证。。。。。。。 我们先来看一下MAC地址，我们输入： ifconfig 这个ether后面的就是我们的MAC地址，MAC地址的长度为48位(6个字节)，通常表示为...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"修改MAC地址","slug":"修改MAC地址","count":1,"path":"api/categories/修改MAC地址.json"}],"tags":[{"name":"payload","slug":"payload","count":2,"path":"api/tags/payload.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%80%9A%E8%BF%87Python%E4%BF%AE%E6%94%B9Linux%E4%B8%BB%E6%9C%BA%E7%9A%84MAC%E5%9C%B0%E5%9D%80\"><span class=\"toc-text\">通过Python修改Linux主机的MAC地址</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BF%AE%E6%94%B9MAC%E5%9C%B0%E5%9D%80\"><span class=\"toc-text\">为什么要修改MAC地址</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%80%9A%E8%BF%87ifconfig%E6%8C%87%E4%BB%A4%E4%BF%AE%E6%94%B9MAC%E5%9C%B0%E5%9D%80\"><span class=\"toc-text\">通过ifconfig指令修改MAC地址</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%80%9A%E8%BF%87Python%E6%9D%A5%E5%AE%8C%E6%88%90%E4%BF%AE%E6%94%B9MAC%E5%9C%B0%E5%9D%80\"><span class=\"toc-text\">通过Python来完成修改MAC地址</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%A9%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5%E4%BF%AE%E6%94%B9%E4%BF%A1%E6%81%AF%E4%BF%AE%E6%94%B9MAC%E5%9C%B0%E5%9D%80\"><span class=\"toc-text\">让用户输入修改信息修改MAC地址</span></a></li></ol></li></ol>","author":{"name":"Longw","slug":"blog-author","avatar":"https://userblink.csdnimg.cn/20211213/qq_57037477/pic/7db9b5c05ba342a75ddf06eecf740949-0.jpg","link":"/","description":"一个不想开挂的安全实习生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"开发网络扫描器","uid":"8144d90f97aac2df03b3e52cffae8156","slug":"开发网络扫描器","date":"2021-09-20T10:54:58.000Z","updated":"2021-09-26T09:55:43.180Z","comments":true,"path":"api/articles/开发网络扫描器.json","keywords":null,"cover":null,"text":" 用Python开发网络扫描器网络扫描器简介我们直接看百度的结果： ​ 迅速发展的Internet给人们的生活、工作带来了巨大的方便，但同时，也带来了一些不容忽视的问题，网络信息的安全保密问题就是其中之一。 网络的开放性以及的是造成网络不安的主要原因。科学家在设计Internet...","link":"","photos":[],"count_time":{"symbolsCount":833,"symbolsTime":"1 mins."},"categories":[{"name":"开发网络扫描器","slug":"开发网络扫描器","count":1,"path":"api/categories/开发网络扫描器.json"}],"tags":[{"name":"payload","slug":"payload","count":2,"path":"api/tags/payload.json"}],"author":{"name":"Longw","slug":"blog-author","avatar":"https://userblink.csdnimg.cn/20211213/qq_57037477/pic/7db9b5c05ba342a75ddf06eecf740949-0.jpg","link":"/","description":"一个不想开挂的安全实习生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"java安装","uid":"3c31ab40e966953ecfabe666f24c6141","slug":"java安装","date":"2021-09-05T10:37:40.000Z","updated":"2021-11-26T06:50:34.102Z","comments":true,"path":"api/articles/java安装.json","keywords":null,"cover":[],"text":" 安装Java集成环境JDK与JRE JRE是Java的运行环境，是运行Java程序所必要的。而JDK是Java的开发环境，它里面就包含了JRE，所以我们学习Java就必须安装JDK。（这里的版本是Windows的） JDK安装首先，我们访问这个网址：https://www.or...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"Java安装","slug":"Java安装","count":1,"path":"api/categories/Java安装.json"}],"tags":[{"name":"Java","slug":"Java","count":19,"path":"api/tags/Java.json"}],"author":{"name":"Longw","slug":"blog-author","avatar":"https://userblink.csdnimg.cn/20211213/qq_57037477/pic/7db9b5c05ba342a75ddf06eecf740949-0.jpg","link":"/","description":"一个不想开挂的安全实习生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}