{"title":"PHPCMS1.0审计","uid":"ca074290e7d8ca9fde2aa858e7b4cb94","slug":"PHPCMS1-0审计","date":"2022-12-05T11:31:46.000Z","updated":"2023-04-21T11:04:12.250Z","comments":true,"path":"api/articles/PHPCMS1-0审计.json","keywords":null,"cover":[],"content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<p><a href=\"https://github.com/harshitbansal373/PHP-CMS\">https://github.com/harshitbansal373/PHP-CMS</a></p>\n<p>CREATE DATABASE <code>cms</code> DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;</p>\n<p>use cms</p>\n<p>source D:/cms.sql    导入sql文件</p>\n<p>harshitbansal  12345   账号密码</p>\n<p>好像不是官方版本，不管了，就这样</p>\n<p>官网：<a href=\"https://www.phpcmsv9.cn/\">https://www.phpcmsv9.cn/</a></p>\n<p>文档可以下载</p>\n<p>开局报错，修改include/db.php里面的数据库配置</p>\n<p>开局没找到管理路径，尝试直接登录，数据库报错了，查看执行语句，发现是验证用户名，直接来个万能admin’ or 1=1#  发现单引号被转义了。。。</p>\n<p>使用的是<strong>mysqli_real_escape_string</strong> 来转义输入的字符集</p>\n<p><a href=\"https://www.cnblogs.com/zhengna/p/12661170.html\">https://www.cnblogs.com/zhengna/p/12661170.html</a></p>\n<p>没有set name gbk，不能使用宽字节，那么就无解</p>\n<p>那么还是看一下入口文件和配置吧!</p>\n<h1 id=\"index-php\"><a href=\"#index-php\" class=\"headerlink\" title=\"index.php\"></a>index.php</h1><p>引入includes/header.php</p>\n<p>header.php包含db.php和mainPageFunctions.php</p>\n<p>这个mainPageFunctions.php就是一些常用的函数，其中有个email验证函数</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">function email_exists($email)&#123;\n    global $connection;\n\n    $query &#x3D; &quot;SELECT user_email FROM users WHERE user_email &#x3D;&#39;$email&#39;&quot;;\n    $result &#x3D; mysqli_query($connection, $query);\n    confirm_query($result);\n\n    if(mysqli_num_rows($result)&gt;0)&#123;\n        return true;\n    &#125;else&#123;\n        return false;\n    &#125;\n\n&#125;</code></pre>\n\n<p>通过刚才的过滤猜到应该是没有那种全局过滤的，所以找一下那里使用看这个函数</p>\n<p>在forget.php中找到</p>\n<h2 id=\"forget-php-sql注入漏洞\"><a href=\"#forget-php-sql注入漏洞\" class=\"headerlink\" title=\"forget.php   sql注入漏洞\"></a>forget.php   sql注入漏洞</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php  include &quot;includes&#x2F;header.php&quot;; ?&gt;\n\n&lt;!-- Navigation --&gt;\n&lt;?php  include &quot;includes&#x2F;navigation.php&quot;; ?&gt;\n\n&lt;?php\n    \n    if(empty($_GET[&#39;forgot&#39;]))&#123;\n        redirect(&#39;index.php&#39;);\n    &#125;\n\n    if(isset($_POST[&#39;email&#39;]))&#123;\n        $email &#x3D; $_POST[&#39;email&#39;];\n        $length &#x3D; 50;\n        $token &#x3D; bin2hex(openssl_random_pseudo_bytes($length));\n\n        if(email_exists($email))&#123;</code></pre>\n\n<p>没有过滤直接使用，但是包含了navigation.php。好像这个php文件没什么作用，暂时不管了</p>\n<p>试试正常的忘记密码流程，执行了sql语句，返回请输入正确的email id</p>\n<p>尝试直接注入，发现有前端email格式验证</p>\n<p>尝试抓包修改，之后查看sql语句</p>\n<p>不知道为什么没有执行sql语句，调式一下</p>\n<p>调式发现的确闭合了，并且执行到了mysql_query语句</p>\n<p>直接尝试时间注入payload：’ and if(ascii(substr(database(),1,1))&gt;114,sleep(3),null)# </p>\n<p>成功执行了语句</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1670230645993-ee0fa914-8df2-4772-9b97-f629ec4535bb.png\" alt=\"image.png\"></p>\n<p>直接在本地mysql命令行测试一下语句</p>\n<p>SELECT user_email FROM users WHERE user_email =‘<a href=\"mailto:&#x65;&#x78;&#97;&#x6d;&#x70;&#x6c;&#x65;&#x31;&#x32;&#51;&#x40;&#x67;&#109;&#97;&#105;&#108;&#x2e;&#x63;&#x6f;&#109;\">&#x65;&#x78;&#97;&#x6d;&#x70;&#x6c;&#x65;&#x31;&#x32;&#51;&#x40;&#x67;&#109;&#97;&#105;&#108;&#x2e;&#x63;&#x6f;&#109;</a>‘and if(length(database())&gt;2,sleep(3),0)#’;</p>\n<p>​    -&gt; ;</p>\n<p>成功延时，这里的where注入必须要第一个结果是正确的，才能执行后面的语句，默认数据库有4个email，3个重复的<a href=\"mailto:&#x65;&#120;&#97;&#x6d;&#112;&#108;&#101;&#64;&#103;&#97;&#109;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;\">&#x65;&#120;&#97;&#x6d;&#112;&#108;&#101;&#64;&#103;&#97;&#109;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;</a>和1个<a href=\"mailto:&#x65;&#120;&#97;&#109;&#x70;&#108;&#101;&#x31;&#50;&#51;&#64;&#103;&#x6d;&#x61;&#x69;&#108;&#x6c;&#46;&#99;&#x6f;&#109;\">&#x65;&#120;&#97;&#109;&#x70;&#108;&#101;&#x31;&#50;&#51;&#64;&#103;&#x6d;&#x61;&#x69;&#108;&#x6c;&#46;&#99;&#x6f;&#109;</a>，直接使用<a href=\"mailto:&#101;&#x78;&#97;&#109;&#112;&#108;&#101;&#49;&#x32;&#51;&#64;&#103;&#109;&#x61;&#x69;&#108;&#46;&#99;&#111;&#109;\">&#101;&#x78;&#97;&#109;&#112;&#108;&#101;&#49;&#x32;&#51;&#64;&#103;&#109;&#x61;&#x69;&#108;&#46;&#99;&#111;&#109;</a>就行，不然重复延时扛不住</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1670231811558-4a2ac4cb-767f-430a-94df-6837b11c5665.png\" alt=\"image.png\"></p>\n<p>成功注入了，实战的时候也可以注册一个，注册不了就信息收集管理员邮箱测试就行了</p>\n<p>接下来就是写脚本注入，不进行了</p>\n<p>回到刚刚的index.php</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">$query &#x3D; &quot;SELECT * FROM posts LIMIT $page_1 ,$per_page&quot;;\n$select_all_posts_query &#x3D; mysqli_query($connection,$query);</code></pre>\n\n<p>直接拼接了，但是后面一个$per_page不可控，并且前一个$page_1，虽然是$_GET获取page再赋值，但是经过了数字计算，就不是可控的了</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">$per_page &#x3D;4;\n\n        if(isset($_GET[&#39;page&#39;]))&#123;\n          $page &#x3D; $_GET[&#39;page&#39;];\n        &#125;else&#123;\n          $page &#x3D; &quot;&quot;;\n        &#125;\n\n        if($page &#x3D;&#x3D; 1 || $page &#x3D;&#x3D; &quot;&quot;)&#123;\n          $page_1 &#x3D; 0;\n        &#125;else&#123;\n          $page_1 &#x3D; ($page * $per_page) -$per_page;\n        &#125;</code></pre>\n\n<p>输入page=aaa，结果得到page_1=-4是，所以跳过</p>\n<p>不过后面提取内容并且echo，可以尝试修改字段内容为xss，就能得到存储型xss</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">$query &#x3D; &quot;SELECT * FROM posts LIMIT $page_1 ,$per_page&quot;;\n       $select_all_posts_query &#x3D; mysqli_query($connection,$query);\n       while($row &#x3D; mysqli_fetch_assoc($select_all_posts_query))&#123;\n           $post_id &#x3D; $row[&#39;post_id&#39;];\n           $post_title &#x3D; $row[&#39;post_title&#39;];\n           $post_user &#x3D; $row[&#39;post_user&#39;];\n           $post_date &#x3D; $row[&#39;post_date&#39;];\n           $post_image &#x3D; $row[&#39;post_image&#39;];\n           $post_content &#x3D; $row[&#39;post_content&#39;];\n     ?&gt;\n\n                 \n       &lt;!--first Blog Post --&gt;\n       &lt;h2&gt; \n         &lt;a href&#x3D;&quot;post.php?p_id&#x3D;&#39;&lt;?php echo $post_id; ?&gt;&#39;&quot;&gt;&lt;?php echo $post_title; ?&gt;&lt;&#x2F;a&gt;</code></pre>\n\n<p>先看一下$post_id和$post_title是不是可控的</p>\n<p>全局搜索$post_title，没想到找到一个sql注入，第一个categorymenu.php中直接获取</p>\n<p>$_GET[‘category’]参数直接赋值给$post_category_id，之后直接带入数据库查询</p>\n<h2 id=\"categorymenu-php-category参数sql注入\"><a href=\"#categorymenu-php-category参数sql注入\" class=\"headerlink\" title=\"categorymenu.php  category参数sql注入\"></a>categorymenu.php  category参数sql注入</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php \n            if(isset($_GET[&#39;category&#39;]))&#123;\n                $post_category_id &#x3D; $_GET[&#39;category&#39;];\n            &#125;\n\n            $query &#x3D; &quot;SELECT * FROM posts WHERE post_category_id &#x3D; &#123;$post_category_id&#125; &quot;;\n            $select_all_posts_count_query &#x3D; mysqli_query($connection,$query);\n            $count &#x3D; mysqli_num_rows($select_all_posts_count_query);</code></pre>\n\n<p>直接尝试一下</p>\n<p>直接访问：[<a href=\"http://phpcms:8086/categorymenu.php?category=3%20and%20if(length(database())%3E2,sleep(1),0)#]\">http://phpcms:8086/categorymenu.php?category=3%20and%20if(length(database())%3E2,sleep(1),0)#]</a>(<a href=\"http://phpcms:8086/categorymenu.php?category=3\">http://phpcms:8086/categorymenu.php?category=3</a> and if(length(database())&gt;2,sleep(1),0)#)</p>\n<p>可以看到延时了两秒，因为有两个id为3的数据</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1670231811558-4a2ac4cb-767f-430a-94df-6837b11c5665.png\" alt=\"image.png\"></p>\n<p>回到刚刚的index.php查$post_title，还是查找update和insert语句看看</p>\n<p>再edit_post.php中找到一句</p>\n<h2 id=\"includes-edit-post-php\"><a href=\"#includes-edit-post-php\" class=\"headerlink\" title=\"includes/edit_post.php\"></a>includes/edit_post.php</h2><p>nmd，上来一个sql注入</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nif(isset($_GET[&#39;p_id&#39;]))&#123;\n    $the_post_id &#x3D; $_GET[&#39;p_id&#39;];\n&#125;\n$query &#x3D; &quot;SELECT * FROM posts WHERE post_id &#x3D; &#123;$the_post_id&#125;&quot;;\n    $select_posts_by_id &#x3D; mysqli_query($connection,$query);</code></pre>\n\n<p>和上一个一模一样，先不看了，找那个xss去</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">if(isset($_POST[&#39;update_post&#39;]))&#123;\n    $post_title &#x3D; $_POST[&#39;post_title&#39;];\n    $post_category_id &#x3D; $_POST[&#39;post_category_id&#39;];\n    $post_status &#x3D; $_POST[&#39;post_status&#39;];\n\n    $post_image &#x3D; $_FILES[&#39;post_image&#39;][&#39;name&#39;];\n    $post_temp_image &#x3D; $_FILES[&#39;post_image&#39;][&#39;tmp_name&#39;];\n    \n    $post_tags &#x3D; $_POST[&#39;post_tags&#39;];\n    $post_content &#x3D; $_POST[&#39;post_content&#39;];\n    $post_date &#x3D; date(&#39;d-m-y&#39;);\n\n    $location &#x3D; &quot;..&#x2F;images&#x2F;$post_image&quot;;\n    move_uploaded_file($post_temp_image,$location);\n\n    if(empty($post_image))&#123;\n        $query &#x3D; &quot;SELECT * FROM posts WHERE post_id &#x3D; &#39;&#123;$the_post_id&#125;&#39; &quot;;\n        $set_image &#x3D; mysqli_query($connection,$query);\n\n        while($row &#x3D; mysqli_fetch_assoc($set_image))&#123;\n        $post_image &#x3D; $row[&#39;post_image&#39;];\n        &#125;\n    &#125;\n\n    $query &#x3D; &quot;UPDATE posts SET post_title &#x3D; &#39;&#123;$post_title&#125;&#39;, post_category_id &#x3D; &#39;&#123;$post_category_id&#125;&#39;, \n            post_status &#x3D; &#39;&#123;$post_status&#125;&#39;, post_image &#x3D; &#39;&#123;$post_image&#125;&#39;, post_tags &#x3D; &#39;&#123;$post_tags&#125;&#39;, \n            post_content &#x3D; &#39;&#123;$post_content&#125;&#39;, post_date &#x3D; NOW() WHERE post_id &#x3D; ?&quot;;\n\n    $stmt_update_post &#x3D; mysqli_prepare($connection,$query);\n    mysqli_stmt_bind_param($stmt_update_post, &quot;s&quot;, $the_post_id);\n    mysqli_stmt_execute($stmt_update_post);\n    mysqli_stmt_close($stmt_update_post);</code></pre>\n\n<p>可以看到，通过post接收传入的参数，之后直接插入sql语句，虽然那个where后面的post_id经过了数据库预编译</p>\n<p>预编译了个寂寞，前面两处使用post_id查询都没有预编译，就是后面update的时候使用了</p>\n<p>看了一下，访问该文件需要进行登录，先注册一个账号，注册发现报错，有一个函数password_hash需要php5.5.0，所以更换一下php的版本，再进行注册</p>\n<p>注册了，也执行了sql语句，但是为什么没有插入数据库</p>\n<p>本地命令行测试，发现有一个字段没有默认值，也就是说这个版本压根不能进行注册</p>\n<p>又是个残缺的，不审了</p>\n<p>搜了一下命令执行的函数，没有就直接不弄了</p>\n<h1 id=\"吐槽\"><a href=\"#吐槽\" class=\"headerlink\" title=\"吐槽\"></a>吐槽</h1><p>老版本的cms的确漏洞百出，但是使用的技术大多过时。虽然漏洞原理一样，但是审计新版带框架的cms难度总是大一点的。后面还是找一点使用了thinkphp框架的老版本cms审计审计。</p>\n<p>Javacms也要开始练了</p>\n","text":" https://github.com/harshitbansal373/PHP-CMS CREATE DATABASE cms DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; use cms source D:/cms.s...","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[{"name":"代码审计","slug":"代码审计","count":7,"path":"api/categories/代码审计.json"}],"tags":[{"name":"PHP","slug":"PHP","count":7,"path":"api/tags/PHP.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#index-php\"><span class=\"toc-text\">index.php</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#forget-php-sql%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">forget.php   sql注入漏洞</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#categorymenu-php-category%E5%8F%82%E6%95%B0sql%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">categorymenu.php  category参数sql注入</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#includes-edit-post-php\"><span class=\"toc-text\">includes&#x2F;edit_post.php</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%90%90%E6%A7%BD\"><span class=\"toc-text\">吐槽</span></a></li></ol>","author":{"name":"Longw","slug":"blog-author","avatar":"https://userblink.csdnimg.cn/20211213/qq_57037477/pic/7db9b5c05ba342a75ddf06eecf740949-0.jpg","link":"/","description":"一个躺平的安全layman","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Java代码审计学习","uid":"241d6a7bc9b104c51a615919491c3ad9","slug":"Java代码审计学习","date":"2022-12-09T10:29:21.000Z","updated":"2023-04-21T11:02:01.293Z","comments":true,"path":"api/articles/Java代码审计学习.json","keywords":null,"cover":[],"text":" 环境搭建：视频教程地址：https://www.bilibili.com/video/BV11t4y1n7KU/?share_source=copy_web&amp;vd_source=8ca6ac59b747f3cadc0c59cff919b9e5 文档地址：https://...","link":"","photos":[],"count_time":{"symbolsCount":"57k","symbolsTime":"52 mins."},"categories":[{"name":"代码审计","slug":"代码审计","count":7,"path":"api/categories/代码审计.json"}],"tags":[{"name":"Java","slug":"Java","count":22,"path":"api/tags/Java.json"}],"author":{"name":"Longw","slug":"blog-author","avatar":"https://userblink.csdnimg.cn/20211213/qq_57037477/pic/7db9b5c05ba342a75ddf06eecf740949-0.jpg","link":"/","description":"一个躺平的安全layman","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"冰心网络验证平台3.1审计或漏洞复现","uid":"8a76ff70cc47792edc7663e7a400be26","slug":"冰心网络验证平台3-1审计或漏洞复现","date":"2022-12-01T07:04:21.000Z","updated":"2023-04-21T11:07:40.512Z","comments":true,"path":"api/articles/冰心网络验证平台3-1审计或漏洞复现.json","keywords":null,"cover":[],"text":" CREATE DATABASE &#96;BX&#96; DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; admin admin 审计资料： https://zone.huoxian.cn/d/1177 https://f...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"代码审计","slug":"代码审计","count":7,"path":"api/categories/代码审计.json"}],"tags":[{"name":"PHP","slug":"PHP","count":7,"path":"api/tags/PHP.json"}],"author":{"name":"Longw","slug":"blog-author","avatar":"https://userblink.csdnimg.cn/20211213/qq_57037477/pic/7db9b5c05ba342a75ddf06eecf740949-0.jpg","link":"/","description":"一个躺平的安全layman","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}