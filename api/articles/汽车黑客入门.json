{"title":"汽车黑客入门","uid":"ebc4d430e2c23dfe4e07a222f7299552","slug":"汽车黑客入门","date":"2021-10-26T05:51:57.000Z","updated":"2021-10-26T10:56:46.703Z","comments":true,"path":"api/articles/汽车黑客入门.json","keywords":null,"cover":[],"content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<p>最近在telegram上找到一个安全实验室的成员，关注了一下。发现她的研究方向是汽车黑客，看了一下他发的汽车黑客入门，挺有意思的。。。。。。</p>\n<p>分为基础篇，模拟器篇，案例篇。</p>\n<p>原作者：<a href=\"https://www.hackers-arise.com/automobile-hacking\">https://www.hackers-arise.com/automobile-hacking</a></p>\n<h2 id=\"基础篇\"><a href=\"#基础篇\" class=\"headerlink\" title=\"基础篇\"></a>基础篇</h2><p>仔细看了一下，前面讲的都是硬件、协议啊、数据包类型啊之类的。大概能看懂，就不写了，无聊嘛。后面写到是买一个蓝牙ODB II迷你接口用来连接连接到汽车的OBD II接口。完蛋，第一篇没车不弄了。</p>\n<p>后面就是使用kali中msf自带的攻击模块，进行攻击。</p>\n<h2 id=\"ICS模拟器篇\"><a href=\"#ICS模拟器篇\" class=\"headerlink\" title=\"ICS模拟器篇\"></a><strong>ICS</strong>模拟器篇</h2><p><strong>因为没车，所以就玩模拟器。</strong></p>\n<ol>\n<li><strong>安装模拟器</strong></li>\n</ol>\n<p>我们打开kali终端安装必要的依赖</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo apt install libsdl2-dev libsdl2-image-dev -y</code></pre>\n\n<p>等待安装完成，接下来就是安装模拟器</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git clone https:&#x2F;&#x2F;github.com&#x2F;zombieCraig&#x2F;ICSim</code></pre>\n\n<p>等待安装完成。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo modprobe vcan &#x2F;&#x2F;加载模块\nsudo ip link add dev vcan0 type vcan &#x2F;&#x2F;为设备名称为vcan0类 型为vcan的设备增加虚拟接口\nsudo ip link set up vcan0 &#x2F;&#x2F;激活vcan0\nifconfig vcan0 &#x2F;&#x2F;验证配置</code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd ICSim    #进入下载好的目录\nsudo bash setup_vcan.sh     #运行文件</code></pre>\n\n<p>前面正常的话就可以进行编译了。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">make</code></pre>\n\n<ol start=\"2\">\n<li><strong>玩模拟器</strong></li>\n</ol>\n<p>接下来打开模拟器</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">.&#x2F;contorls vcan0     #这是控制界面\n然后再打开一个终端进入安装目录\n.&#x2F;icsim vcan0    #这是汽车模拟器</code></pre>\n\n<p>然后你的界面就会出现两个小窗口，这就是你的模拟器和控制器。<strong>没有截图，纯手工描写</strong>。</p>\n<p>接下来就是叫你如何使用模拟器</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">有手柄按照操控界面提示来\n没有手柄就用键盘\n数字旁边有个上下左右那个\n按-&gt; 加上enter 就会亮起信号灯，另一个就不用讲了\n按住-&gt; + shift + a&#x2F;b&#x2F;xy 就会分别打开汽车的车门。至于关门，看不懂，研究好久没弄出来。\n按住 ^ + enter  就会加速 </code></pre>\n\n<p>要学的暂时就这么多了。</p>\n<p>因为上一篇没写，所以没安装工具。现在来安装工具。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git clone https:&#x2F;&#x2F;github.com&#x2F;linux-can&#x2F;can-utils.git</code></pre>\n\n<p>下面是工具的一些基础知识</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">can-utils工具可以被分为几个功能组\n1. 显示、记录、生成和重放CAN通信的基本工具\n2. 通过IP socket 访问CAN\n3. CAN内核网关的配置 \n4. CAN总线测量\n5. ISO-TP工具 \n6. 日志文件转换器 \n7. 串行线规范（slc）配置 \n因为刚刚起步，我们将只关注基本工具和日志文件转换器。\ncan-utils中的工具及其功能的完整列表如下： \n\n1. 显示，记录，生成和重放CAN流量的基本工具\ncandump：显示，过滤和记录CAN数据，导出到文件\ncanplayer：重播CAN日志文件\ncansend：发送单个帧\ncangen：生成（随机）CAN流量\ncansniffer：比对CAN数据内容的差异（仅11位CAN ID） \n\n2. 通过IP socket进行CAN访问\ncanlogserver：记录来自远程或本地主机的CAN帧\nbcmserver：交互式BCM配置（远程&#x2F;本地）\nsocketcand：通过TCP &#x2F; IP socket 使用RAW &#x2F; BCM &#x2F; ISO-TP socket\n\n3. CAN内核网关配置\ncangw：用于netlink配置的CAN网关userpace工具\n\n4. CAN总线的测量和测试\ncanbusload：计算并显示CAN总线负载\ncan-calc-bit-timing：内核空间比特率计算的用户空间版本\ncanfdtest：全双工测试程序（DUT和主机部分） \n\n5. 适用于Linux的ISO-TP工具ISO15765-2：2016\nisotpsend：发送单个ISO-TP PDU\nisotprecv：接收ISO-TP PDU\nisotpsniffer：“窃听” ISO-TP PDU\nisotpdump：“窃听”并解释CAN消息（CAN_RAW）\nisotpserver：用于简单的TCP &#x2F; IP 与 ISO 15765-2 桥接（ASCII HEX）的IP服务器\nisotpperf：ISO15765-2协议的性能可视化\nisotptun：通过ISO-TP在CAN上创建双向IP隧道\n\n6. 日志文件转换器\nasc2log：将ASC日志文件转换为紧凑型CAN框架日志文件\nlog2asc：将紧凑型CAN框架日志文件转换为ASC日志文件\nlog2long：将紧凑的CAN帧表示形式转换为用户可读 \n\n7. 串行线路规范配置（用于slcan驱动程序）\nslcan_attach：用于串行线CAN接口配置的用户空间工具\nslcand：用于串行线CAN接口配置的守护程序\nslcanpty：使用slcan ASCII协议为应用程序创建一个pty</code></pre>\n\n<p>安装完成之后，我们先进入工具目录</p>\n<p><strong>CCansniffer过滤特定流量</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cansniffer -c vcan0    #用来嗅探CAN的流量\n当我们使用-c选项时，正在变化的值会变成红色，以帮助我们识别这些关键值。\n使用-h参数查看帮助</code></pre>\n\n<p>回车后，会发现一直跳跳跳，正常现象。</p>\n<p>接下来输入</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-000000</code></pre>\n\n<p>输入完，回车。就会发现跳的流量没有了。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">+40C    #就会显示ID&#x3D;40C的流量</code></pre>\n\n<p><strong>Candump捕获CAN流量</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">candump -c -l vcan0   #-l 参数来记录，-c参数对输出进行着色。</code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">candump -c -l -s 0 -a vcan0   #记录的同时，进行输出</code></pre>\n\n<p><strong>canplayer进行重放</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">canplayer -I candump-xxx.log   #因为文件名不一样，直接tab键补全</code></pre>\n\n<p><strong>cansend 发送自定义帧</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cansend vcan0 40C#033133383439000d      #发送40C这一帧数据\nvcan0是接口\n40C＃是框架ID\n000005500108000D是我们要发送的数据</code></pre>\n\n<ol start=\"3\">\n<li><strong>逆向</strong></li>\n</ol>\n<p>在了解了工具的使用之后，我们开始逆向工程。在控制板输入加油门指令进行加速，并且抓取数据流。</p>\n<p>当速度达到100就可以松开。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cansniffer -c vcan0\n-000000\n+244                 #ID为244的数据包可能是汽车加速的数据包</code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cansend vcan0 244#0000003812   #向汽车发送数据包，看能否是汽车速度达到100</code></pre>\n\n<p>因为信号单一，看不到任何效果，那么就可以使用</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">while true; do cansend vcan0 244#0000003812; done</code></pre>\n\n<p>执行，就可以看到汽车油门指针不断的向100跳跃。</p>\n<h2 id=\"案例篇-原作者：https-www-hackers-arise-com-automobile-hacking\"><a href=\"#案例篇-原作者：https-www-hackers-arise-com-automobile-hacking\" class=\"headerlink\" title=\"案例篇(原作者：https://www.hackers-arise.com/automobile-hacking)\"></a>案例篇(原作者：<a href=\"https://www.hackers-arise.com/automobile-hacking\">https://www.hackers-arise.com/automobile-hacking</a>)</h2><p>就是讲了一次入侵汽车系统的操作过程。</p>\n<p>这是视频地址：<a href=\"https://youtu.be/xHCUpLBGIKQ\">https://youtu.be/xHCUpLBGIKQ</a></p>\n<p>下面是分析：</p>\n<p><strong>Step1</strong>：从车辆捕获低频信号</p>\n<p>这个种攻击通过一个射频（RF）链路转发来自车辆的低频（LF）信号。每个射频链路由一个发射器和一个接收器组成。</p>\n<p><strong>Step2</strong>：将<strong>LF</strong>转换为<strong>2.5GHZ</strong>并发送到接收器</p>\n<p>发射器捕获车辆的低频（LF）信号并转换为2.5GHz。然后，该信号通过空中（最长100m）发送到接收器，该接收器再将其转换回LF信号。</p>\n<p><strong>Step3</strong>：放大信号并发送到<strong>LF</strong>天线</p>\n<p>接收器处的LF信号被放大并发送到环路LF天线，该天线复制车辆最初发送的信号。然后使用环形LF天线传输信号以打开门，然后启动发动机。</p>\n<h3 id=\"入侵汽车报警系统以控制车辆\"><a href=\"#入侵汽车报警系统以控制车辆\" class=\"headerlink\" title=\"入侵汽车报警系统以控制车辆\"></a><strong>入侵汽车报警系统以控制车辆</strong></h3><p>由于许多汽车使用的钥匙存在众所周知的漏洞，人们一直在通过购买汽车报警系统来弥补这一缺陷。</p>\n<p>许多这样的钥匙都可以被上面所讲述的中继攻击来入侵。因此，汽车报警器供应商一直在销售高端（有些高达5000美元）的汽车报警系统，以弥补这一风险，并标榜自己是 “不可破解的”（这就像在黑客面前挥舞红色斗篷一样）。</p>\n<p>事实证明，许多这样的报警系统实际上比车辆上的钥匙或其他数字系统更容易被黑。 </p>\n<p>最近，Pentest Partners证明他们只需篡改电子邮件用户重置选项的一些参数（一种微不足道的网络黑客技术）就足以控制这些系统。 </p>\n<p>下面是提供这些报警系统app之一的截图。正如你所看到的，这个应用程序使用户可以远程锁定、获得车辆地理定位和启动停止车辆。如果攻击者能够修改这个应用程序的用户，那么他们即使不是合法车主也可以做所有这些操作。</p>\n<h3 id=\"参数篡改\"><a href=\"#参数篡改\" class=\"headerlink\" title=\"参数篡改\"></a>参数篡改</h3><p>当Pentest Partners的成员在Viper报警系统上选择 “修改用户 “选项时，他们发现这个请求没有被 </p>\n<p>正确验证，如下图所示。 </p>\n<p>因此，他们可以简单地发送一个POST请求来修改用户和密码并控制车辆。这可以通过BurpSuite、Paros Proxy或Tamper Data等代理工具完成。然后，合法用户被锁在自己的车外，黑客则可以控制车辆。 </p>\n<h3 id=\"Pandora案例\"><a href=\"#Pandora案例\" class=\"headerlink\" title=\"Pandora案例\"></a><strong>Pandora</strong>案例</h3><p>在潘多拉公司（Pandora）的一个类似系统中，在 “修改用户 “选项中也发现了这种缺乏验证的情 </p>\n<p>况。</p>\n<p>在这里，黑客可以简单地用他们自己的电子邮件地址修改 “电子邮件 “字段，并使用一个 “id “号码来发送一个更改用户和密码的请求。 </p>\n<p><img src=\"https://wx4.sinaimg.cn/mw2000/0089olAbly1gvsq0h5mrtj30qj0fk48x.jpg\"></p>\n<p>正如你在下面看到的，黑客同样能够利用脚本改变用户的电子邮件地址和密码并控制车辆。</p>\n<p><img src=\"https://wx1.sinaimg.cn/mw2000/0089olAbly1gvsq0khoy0j30sb0ok14k.jpg\"></p>\n<p>随着运输系统日益数字化，汽车或车辆入侵攻击是网络安全的最前沿。 </p>\n<p>这些车辆的制造商正在犯15年前在传统IT系统中常见的，同样的错误。这些报警系统制造商犯了一个非常基本的错误，没有验证用户修改功能，使攻击者能够通过简单的参数篡改来控制 “受保护”的车辆。</p>\n<h3 id=\"入侵三菱欧蓝德PHEV\"><a href=\"#入侵三菱欧蓝德PHEV\" class=\"headerlink\" title=\"入侵三菱欧蓝德PHEV\"></a>入侵三菱欧蓝德<strong>PHEV</strong></h3><p>近年来，汽车已经变得越来越复杂。大多数汽车现在都有许多集成电路（IC）和大量的软件，既可以优化车辆的运行（例如燃料和氧气消耗、防抱死制动、自动感应和制动系统等），也可以为车主提供便利。随着这种复杂性和先进性的增加，脆弱性也随之增加了。 </p>\n<p>最近，来自英国Pentest Partners的白帽黑客注意到，三菱Outlander PHEV有一个应用程序，司机可以通过车内的Wi-Fi接入点（AP）进行连接。通常情况下，这种应用程序应该是要通过GSM或云技术连接来访问这车辆的控制系统的。而在欧蓝德上，则可以通过这个Wi-Fi接入点来访问一些车辆控制系统，包括报警系统、充电系统、灯光、风扇和温度控制等。 </p>\n<p>这意味着，如果我们或小偷能够连接到这个内置在车辆中的无线AP，那么盗窃报警系统就可以被禁用，以及做一些其他事情。使这辆车更加脆弱的是Wi-Fi的安全设计，或者说，安全实施不严格。 </p>\n<p>它存在以下几个明显的安全问题： </p>\n<ol>\n<li><p>WiFi接入点的密码记录在了车主手册中。 </p>\n</li>\n<li><p>接入点的SSID都符合 “REMOTEnnaaaa “的规律，其中 “n “是任何数字，”a “是任何小写字母。 </p>\n</li>\n<li><p>密码相对较短且简单，使其容易被暴力破解。</p>\n</li>\n</ol>\n<h4 id=\"寻找脆弱的三菱欧蓝德目标\"><a href=\"#寻找脆弱的三菱欧蓝德目标\" class=\"headerlink\" title=\"寻找脆弱的三菱欧蓝德目标\"></a>寻找脆弱的三菱欧蓝德目标</h4><p>这款三菱欧蓝德的销量超过10万辆，所以你身边很可能就有一辆。当然，你可以简单地走在街上寻找它们，或者你可以按照这辆车所特有的SSID模式进行自动搜索。 我们可以使用无线地理记录引擎<a href=\"http://www.wigle.net(wigle.net对wifi/\">www.wigle.net（wigle.net对WiFi</a> AP进行编目，并通过GPS坐标对其进行索引）。 </p>\n<p>在那里，我们可以使用Outlander的SSID的字符串模式，并选择按SSID搜索。当我这样做时发现了许多目标在wigle.net上搜索时，搜索字符串 “REMOTE______”，其中6个下划线代表：2个数字和4个字 母，如下所示。 </p>\n<p><img src=\"https://wx2.sinaimg.cn/mw2000/0089olAbly1gvsq0n86naj30qo0b9n0v.jpg\"></p>\n<p>正如你在下面看到的，我找到了许多符合这种模式的AP，大多数在西欧。我们可以通过在wigle.net中加入我们的GPS坐标来细化我们的搜索，以找到你所在地区的车辆。</p>\n<p><img src=\"https://wx4.sinaimg.cn/mw2000/0089olAbly1gvsq0pjo7pj30qi0fntju.jpg\"></p>\n<h4 id=\"入侵欧蓝德的AP\"><a href=\"#入侵欧蓝德的AP\" class=\"headerlink\" title=\"入侵欧蓝德的AP\"></a>入侵欧蓝德的<strong>AP</strong></h4><p>一旦我们找到了三菱欧蓝德，下一步就与任何使用aircrack-ng和hashcat的无线AP破解非常相似。首先，我们连接到AP，然后在4路握手包中提取获得密码哈希值，最后，开始暴力破解。让我们开始吧!</p>\n<p>首先，我们将使用Kali Linux 和aircrack-ng。我将使用一个旧的Alfa AWUS036H USB无线适配器，当然你可以使用任何你喜欢的兼容kali的无线网卡 </p>\n<p>第一步是检查无线连接。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">iwconfig</code></pre>\n\n<p><img src=\"https://wx4.sinaimg.cn/mw2000/0089olAbly1gvsq0rpicwj30qk06dgni.jpg\"></p>\n<p>确定我的无线适配器是wlan0。 </p>\n<p>然后，我们需要将无线适配器调至监听模式</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">airmon-ng start wlan0</code></pre>\n\n<p><img src=\"https://wx3.sinaimg.cn/mw2000/0089olAbly1gvsq0u2gkbj30qc0b70w0.jpg\"></p>\n<p>这里要注意的是，这个过程会无线适配器的名称改为mon0。 </p>\n<p>接下来，我们需要开始捕捉周围的无线流量。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">airodump-ng mon0</code></pre>\n\n\n\n<p><img src=\"https://wx3.sinaimg.cn/mw2000/0089olAbly1gvsq0wr5ojj30rk097gpq.jpg\"></p>\n<p>正如你在上面的截图中所看到的，我们可以看到三菱的AP名为REMOTEaa1234。这就是我们的目标AP。 </p>\n<p>接下来我们需要在该信道上捕获该AP，并将捕获的PSK写入一个名为carhack的文件中。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">airodump-ng --bssid &lt;the AP BSSID&gt; -c &lt;the AP channel&gt; --write carhack mon0</code></pre>\n\n\n\n<p><img src=\"https://wx3.sinaimg.cn/mw2000/0089olAbly1gvsq0z66h2j30qm0bk0xy.jpg\"></p>\n<p>当车主连接到车上的AP时，我们在4路握手中捕获密码哈希值。 </p>\n<p>如果车主是已经连接的状态，可能就需要使用 aireplay-ng 的 deauth 功能来踢掉他们，当他们重新连接时，就可以捕获哈希值。 </p>\n<p>最后一步是破解这个哈希值。Aircrack-ng在破解WPA-PSK的哈希值方面不是特别好，但幸运的是，hashcat在这方面足够强大。 </p>\n<p>我们可以使用以下命令将cap文件carhack.cap转换为可用于hashcat的格式（.hccap）。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">aircrack-ng &lt;the aircrack .cap file&gt; -J &lt;the hashcat .hccap file&gt;</code></pre>\n\n<p><img src=\"https://wx1.sinaimg.cn/mw2000/0089olAbly1gvsq11sqocj30qq01n3z3.jpg\"></p>\n<p>转换好的文件可以直接使用hashcat进行破解。</p>\n<p>Pentest Partners的人用一台普通的单CPU笔记本电脑花了四天时间，但是用多个CPU，一个GPU集群或基于云的资源，你可以在几个小时内破解它。一旦我们用破解的PSK连接到欧蓝德的AP，我们就可以对车辆进行破坏和操作。</p>\n<h3 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h3><p>此篇由3部分组成的文章只简述了入侵汽车的最基础知识，适合新手了解最基础进攻流程和概念。算了，玩的开心。</p>\n<p><strong>得出结论，汽车安全方面的漏洞其实很多都是为了便利人们所造成的结果。就和web的漏洞很像，可能是因为这方面没有得到很好的重视所导致的。</strong></p>\n<p><img src=\"https://wx1.sinaimg.cn/mw2000/0089olAbly1gtov5zise9j607i07i0sr02.jpg\"></p>\n","text":" 最近在telegram上找到一个安全实验室的成员，关注了一下。发现她的研究方向是汽车黑客，看了一下他发的汽车黑客入门，挺有意思的。。。。。。 分为基础篇，模拟器篇，案例篇。 原作者：https://www.hackers-arise.com/automobile-hacking...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[{"name":"汽车黑客","slug":"汽车黑客","count":1,"path":"api/categories/汽车黑客.json"}],"tags":[{"name":"汽车黑客入门","slug":"汽车黑客入门","count":1,"path":"api/tags/汽车黑客入门.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80%E7%AF%87\"><span class=\"toc-text\">基础篇</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ICS%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%AF%87\"><span class=\"toc-text\">ICS模拟器篇</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A1%88%E4%BE%8B%E7%AF%87-%E5%8E%9F%E4%BD%9C%E8%80%85%EF%BC%9Ahttps-www-hackers-arise-com-automobile-hacking\"><span class=\"toc-text\">案例篇(原作者：https:&#x2F;&#x2F;www.hackers-arise.com&#x2F;automobile-hacking)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%A5%E4%BE%B5%E6%B1%BD%E8%BD%A6%E6%8A%A5%E8%AD%A6%E7%B3%BB%E7%BB%9F%E4%BB%A5%E6%8E%A7%E5%88%B6%E8%BD%A6%E8%BE%86\"><span class=\"toc-text\">入侵汽车报警系统以控制车辆</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%82%E6%95%B0%E7%AF%A1%E6%94%B9\"><span class=\"toc-text\">参数篡改</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pandora%E6%A1%88%E4%BE%8B\"><span class=\"toc-text\">Pandora案例</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%A5%E4%BE%B5%E4%B8%89%E8%8F%B1%E6%AC%A7%E8%93%9D%E5%BE%B7PHEV\"><span class=\"toc-text\">入侵三菱欧蓝德PHEV</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AF%BB%E6%89%BE%E8%84%86%E5%BC%B1%E7%9A%84%E4%B8%89%E8%8F%B1%E6%AC%A7%E8%93%9D%E5%BE%B7%E7%9B%AE%E6%A0%87\"><span class=\"toc-text\">寻找脆弱的三菱欧蓝德目标</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%A5%E4%BE%B5%E6%AC%A7%E8%93%9D%E5%BE%B7%E7%9A%84AP\"><span class=\"toc-text\">入侵欧蓝德的AP</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%93%E8%AF%AD\"><span class=\"toc-text\">结语</span></a></li></ol></li></ol>","author":{"name":"Longw","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"安卓远控","uid":"46cf636a853cf895eb01f079c7dbe74c","slug":"安卓远控","date":"2021-10-25T12:10:12.000Z","updated":"2021-10-25T13:42:31.717Z","comments":true,"path":"api/articles/安卓远控.json","keywords":null,"cover":[],"text":" 写一点大家喜欢看的东西。。。。。。 安卓远控远程控制，是在网络上由一台电脑（主控端Remote/客户端）远距离去控制另一台电脑（被控端Host/服务器端）的技术，这里的远程不是字面意思的远距离，一般指通过网络控制远端电脑。 这次的安卓远控就是将正常的app嵌入恶意代码，当你安装...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"远控","slug":"远控","count":1,"path":"api/categories/远控.json"}],"tags":[{"name":"github","slug":"github","count":1,"path":"api/tags/github.json"}],"author":{"name":"Longw","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}