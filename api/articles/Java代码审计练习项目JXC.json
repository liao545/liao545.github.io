{"title":"Java代码审计练习项目JXC","uid":"99274788880f67f15a0d8a86bea61410","slug":"Java代码审计练习项目JXC","date":"2022-12-18T07:10:52.000Z","updated":"2022-12-19T11:32:32.487Z","comments":true,"path":"api/articles/Java代码审计练习项目JXC.json","keywords":null,"cover":[],"content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h1 id=\"环境搭建：\"><a href=\"#环境搭建：\" class=\"headerlink\" title=\"环境搭建：\"></a>环境搭建：</h1><p>视频地址：<a href=\"https://www.bilibili.com/video/BV1NG4y187dX/?spm_id_from=333.788&amp;vd_source=6632b385bcaaeb6eb7c62e69b2587a3e\">https://www.bilibili.com/video/BV1NG4y187dX/?spm_id_from=333.788&amp;vd_source=6632b385bcaaeb6eb7c62e69b2587a3e</a></p>\n<p>修改配置文件的数据库账号密码，以及服务启动端口。</p>\n<p>环境要求：</p>\n<p>Java版本：1.8.0_261，未使用1.8.0_71也能正常编译运行</p>\n<p>Mysql版本：5.7 </p>\n<p>使用的是maven，idea自动导入插件</p>\n<p>后台地址：<a href=\"http://192.168.0.107:8888/login.html;jsessionid=9F8D6F8B01F8B1B1D525BCA70C5D0A9C\">http://192.168.0.107:8888/login.html;jsessionid=9F8D6F8B01F8B1B1D525BCA70C5D0A9C</a></p>\n<p>这个后台地址的端口号默认是8080，为防止和burp冲突改为8888</p>\n<p>账号：admin     密码：admin123</p>\n<h1 id=\"审计：\"><a href=\"#审计：\" class=\"headerlink\" title=\"审计：\"></a>审计：</h1><h2 id=\"第三方组件审计：\"><a href=\"#第三方组件审计：\" class=\"headerlink\" title=\"第三方组件审计：\"></a>第三方组件审计：</h2><table>\n<thead>\n<tr>\n<th align=\"center\">组件名称</th>\n<th align=\"center\">版本号</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">SpringBoot</td>\n<td align=\"center\">2.1.0</td>\n</tr>\n<tr>\n<td align=\"center\">Mysql</td>\n<td align=\"center\">5.1.40</td>\n</tr>\n<tr>\n<td align=\"center\">mybatis</td>\n<td align=\"center\">3.4.6</td>\n</tr>\n<tr>\n<td align=\"center\">shiro-core</td>\n<td align=\"center\">1.4.0</td>\n</tr>\n</tbody></table>\n<h3 id=\"shiro1-4-0-：\"><a href=\"#shiro1-4-0-：\" class=\"headerlink\" title=\"shiro1.4.0 ：\"></a>shiro1.4.0 ：</h3><p>shiro的使用：<a href=\"https://blog.csdn.net/wanliangsoft/article/details/86533754\">https://blog.csdn.net/wanliangsoft/article/details/86533754</a></p>\n<p>shiro历史漏洞：<a href=\"https://blog.csdn.net/qq_41832837/article/details/109064636\">https://blog.csdn.net/qq_41832837/article/details/109064636</a></p>\n<p>华为云shiro漏洞通报：<a href=\"https://www.huaweicloud.com/intl/zh-cn/notice/20210616155804472.html\">https://www.huaweicloud.com/intl/zh-cn/notice/20210616155804472.html</a></p>\n<p>从版本维度：</p>\n<p>Shiro &lt;= 1.2.4 ：存在shiro-550反序列化漏洞；</p>\n<p>1.2.5 &lt;= Shiro &lt; 1.4.2 ：存在shiro-721反序列化漏洞；</p>\n<p>Shiro &gt; = 1.4.2 ：如果用户使用弱密钥（互联网已公开/已泄露），即使升级至最新版本，仍然存在反序列化漏洞入口</p>\n<p>1.4.0存在反序列化，搭配spring存在身份认证绕过，只使用shiro鉴权存在权限绕过</p>\n<p>cve2020-1957分析：<a href=\"https://www.cnblogs.com/r00tuser/p/12575934.html\">https://www.cnblogs.com/r00tuser/p/12575934.html</a></p>\n<p>cve2020-1957漏洞环境：<a href=\"https://github.com/vulhub/vulhub/blob/master/shiro/CVE-2020-1957/README.zh-cn.md\">https://github.com/vulhub/vulhub/blob/master/shiro/CVE-2020-1957/README.zh-cn.md</a></p>\n<p>cve2020-2957分析：<a href=\"https://www.rednn.com/safe/202003/30176.html\">https://www.rednn.com/safe/202003/30176.html</a></p>\n<p>cve2020-11989分析：<a href=\"https://xz.aliyun.com/t/7964\">https://xz.aliyun.com/t/7964</a></p>\n<p>cve2020-13933分析：<a href=\"https://xz.aliyun.com/t/8230/\">https://xz.aliyun.com/t/8230/</a></p>\n<p>项目中的shiro拦截配置：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@Bean\npublic ShiroFilterFactoryBean shirFilter(SecurityManager securityManager) &#123;\n    ShiroFilterFactoryBean shiroFilterFactoryBean &#x3D; new ShiroFilterFactoryBean();\n\n    &#x2F;&#x2F; 必须设置 SecurityManager\n    shiroFilterFactoryBean.setSecurityManager(securityManager);\n\n    &#x2F;&#x2F; 如果不设置默认会自动寻找Web工程根目录下的&quot;&#x2F;login.jsp&quot;页面\n    shiroFilterFactoryBean.setLoginUrl(&quot;&#x2F;login.html&quot;);\n \n\n    &#x2F;&#x2F; 拦截器\n    Map&lt;String, String&gt; filterChainDefinitionMap &#x3D; new LinkedHashMap&lt;&gt;();\n    &#x2F;&#x2F; 配置不会被拦截的链接 顺序判断\n    filterChainDefinitionMap.put(&quot;&#x2F;static&#x2F;**&quot;, &quot;anon&quot;);\n    filterChainDefinitionMap.put(&quot;&#x2F;user&#x2F;login&quot;, &quot;anon&quot;);\n    filterChainDefinitionMap.put(&quot;&#x2F;drawImage&quot;, &quot;anon&quot;);\n\n    &#x2F;&#x2F; 配置退出过滤器,其中的具体的退出代码Shiro已经替我们实现了\n    filterChainDefinitionMap.put(&quot;&#x2F;user&#x2F;logOut&quot;, &quot;logout&quot;);\n\n\n    &#x2F;&#x2F; &lt;!-- 过滤链定义，从上向下顺序执行，一般将 &#x2F;**放在最为下边\n    &#x2F;&#x2F; &lt;!-- authc:所有url都必须认证通过才可以访问; anon:所有url都都可以匿名访问--&gt;\n    filterChainDefinitionMap.put(&quot;&#x2F;**&quot;, &quot;authc&quot;);\n\n    shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap);\n    return shiroFilterFactoryBean;\n&#125;</code></pre>\n\n<p>除了登录和静态资源全部都不能访问，直接根目录 /** 了。而存在绕过的漏洞模式：</p>\n<p>借用vulhub的代码</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@Bean\npublic ShiroFilterChainDefinition shiroFilterChainDefinition() &#123;\n    DefaultShiroFilterChainDefinition chainDefinition &#x3D; new DefaultShiroFilterChainDefinition();\n    chainDefinition.addPathDefinition(&quot;&#x2F;login.html&quot;, &quot;authc&quot;); &#x2F;&#x2F; need to accept POSTs from the login form\n    chainDefinition.addPathDefinition(&quot;&#x2F;logout&quot;, &quot;logout&quot;);\n    chainDefinition.addPathDefinition(&quot;&#x2F;admin&#x2F;**&quot;, &quot;authc&quot;);\n    return chainDefinition;\n&#125;</code></pre>\n\n<p>都是前面带路径的，所以关于绕过的漏洞就不用看了。</p>\n<p>还有一个shiro721反序列化漏洞，登陆页面没有remember-Me，但是抓包发现cookie中有remember-Me字段。</p>\n<p>漏洞利用教程：<a href=\"https://blog.csdn.net/qq_41874930/article/details/121314926\">https://blog.csdn.net/qq_41874930/article/details/121314926</a></p>\n<p>用一键化工具测试了一下，发现不行。全局搜索了key关键字也没找到。</p>\n<p>话说这个漏洞审计的时候应该怎么看呢？算了，先放一放。。。。</p>\n<h2 id=\"sql注入审计：\"><a href=\"#sql注入审计：\" class=\"headerlink\" title=\"sql注入审计：\"></a>sql注入审计：</h2><p>和前面一个一样，直接搜索 $(  </p>\n<p>没有任何发现，查找order by和like，发现写法也是正确的</p>\n<h2 id=\"xss审计：\"><a href=\"#xss审计：\" class=\"headerlink\" title=\"xss审计：\"></a>xss审计：</h2><p>全局搜索filter，看是否有过滤设置：</p>\n<p>只有前面的shiroconfig里有路径访问控制，所以和前面一样，搜索update和insert。update一般会在页面显示，所以找update</p>\n<p>找到的update比较多，一时半会不好弄。反正前面看了没有过滤，这时候就可以尝试黑盒了。在后台找能修改并且会显示的地方。</p>\n<p>在基础资料下面有一些修改输入字符串的地方：</p>\n<p><img src=\"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/4444/89.png\"></p>\n<p>插入payload，点击保存后，立马就会弹窗</p>\n<p><img src=\"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/4444/90.png\"></p>\n<p>其他地方也一样。</p>\n<h2 id=\"其他审计：\"><a href=\"#其他审计：\" class=\"headerlink\" title=\"其他审计：\"></a>其他审计：</h2><p>找了一下其他关键字，file全文没有上传文件的地方</p>\n<p>功能点就那么点，也就xss了。</p>\n<h2 id=\"吐槽：\"><a href=\"#吐槽：\" class=\"headerlink\" title=\"吐槽：\"></a>吐槽：</h2><p>快新年了，要开始专心复习了。还有好多要学的没学。最后几天，尽量学一点。</p>\n","text":" 环境搭建：视频地址：https://www.bilibili.com/video/BV1NG4y187dX/?spm_id_from=333.788&amp;vd_source=6632b385bcaaeb6eb7c62e69b2587a3e 修改配置文件的数据库账号密码，以及...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"代码审计","slug":"代码审计","count":7,"path":"api/categories/代码审计.json"}],"tags":[{"name":"Java","slug":"Java","count":23,"path":"api/tags/Java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%EF%BC%9A\"><span class=\"toc-text\">环境搭建：</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%A1%E8%AE%A1%EF%BC%9A\"><span class=\"toc-text\">审计：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%89%E6%96%B9%E7%BB%84%E4%BB%B6%E5%AE%A1%E8%AE%A1%EF%BC%9A\"><span class=\"toc-text\">第三方组件审计：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#shiro1-4-0-%EF%BC%9A\"><span class=\"toc-text\">shiro1.4.0 ：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sql%E6%B3%A8%E5%85%A5%E5%AE%A1%E8%AE%A1%EF%BC%9A\"><span class=\"toc-text\">sql注入审计：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#xss%E5%AE%A1%E8%AE%A1%EF%BC%9A\"><span class=\"toc-text\">xss审计：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96%E5%AE%A1%E8%AE%A1%EF%BC%9A\"><span class=\"toc-text\">其他审计：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%90%90%E6%A7%BD%EF%BC%9A\"><span class=\"toc-text\">吐槽：</span></a></li></ol></li></ol>","author":{"name":"Longw","slug":"blog-author","avatar":"https://userblink.csdnimg.cn/20211213/qq_57037477/pic/7db9b5c05ba342a75ddf06eecf740949-0.jpg","link":"/","description":"一个不想开挂的安全实习生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"V2board-1.6.1-提权漏洞","uid":"012af26b8a1c40c6035cf47689fa91dd","slug":"V2board-1-6-1-提权漏洞复现","date":"2022-12-19T05:27:27.000Z","updated":"2022-12-19T08:26:31.537Z","comments":true,"path":"api/articles/V2board-1-6-1-提权漏洞复现.json","keywords":null,"cover":[],"text":" vulhub靶场文章：https://github.com/vulhub/vulhub/blob/master/v2board/1.6-privilege-escalation/README.zh-cn.md PHP写的机场，就复现看看。 原理就是认证使用了缓存里的信息，但是没...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"逻辑漏洞","slug":"逻辑漏洞","count":1,"path":"api/categories/逻辑漏洞.json"}],"tags":[{"name":"PHP","slug":"PHP","count":7,"path":"api/tags/PHP.json"}],"author":{"name":"Longw","slug":"blog-author","avatar":"https://userblink.csdnimg.cn/20211213/qq_57037477/pic/7db9b5c05ba342a75ddf06eecf740949-0.jpg","link":"/","description":"一个不想开挂的安全实习生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Cacti前台命令注入漏洞(CVE-2022-46169)复现","uid":"d01e9b9478aaf264048aea2ee163e73a","slug":"Cacti前台命令注入漏洞-CVE-2022-46169-复现","date":"2022-12-15T08:49:17.000Z","updated":"2022-12-19T05:28:23.739Z","comments":true,"path":"api/articles/Cacti前台命令注入漏洞-CVE-2022-46169-复现.json","keywords":null,"cover":[],"text":" 直接看文章复现：https://github.com/vulhub/vulhub/blob/master/cacti/CVE-2022-46169/README.zh-cn.md payload没有回显：GET &#x2F;remote_agent.php?action&#x3...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"RCE","slug":"RCE","count":2,"path":"api/categories/RCE.json"}],"tags":[{"name":"PHP","slug":"PHP","count":7,"path":"api/tags/PHP.json"}],"author":{"name":"Longw","slug":"blog-author","avatar":"https://userblink.csdnimg.cn/20211213/qq_57037477/pic/7db9b5c05ba342a75ddf06eecf740949-0.jpg","link":"/","description":"一个不想开挂的安全实习生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}