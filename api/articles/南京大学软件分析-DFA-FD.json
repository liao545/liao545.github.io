{"title":"南京大学软件分析--DFA-FD","uid":"e22c2a7c39f48bb60c2d574a9a534902","slug":"南京大学软件分析-DFA-FD","date":"2022-12-24T08:54:03.000Z","updated":"2022-12-25T07:14:40.519Z","comments":true,"path":"api/articles/南京大学软件分析-DFA-FD.json","keywords":null,"cover":[],"content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<p>B站教程地址：<a href=\"https://www.bilibili.com/video/BV1A741117it/?spm_id_from=pageDriver&amp;vd_source=6632b385bcaaeb6eb7c62e69b2587a3e\">https://www.bilibili.com/video/BV1A741117it/?spm_id_from=pageDriver&amp;vd_source=6632b385bcaaeb6eb7c62e69b2587a3e</a></p>\n<p>英文文档地址：<a href=\"https://pascal-group.bitbucket.io/lectures/DFA-FD.pdf\">https://pascal-group.bitbucket.io/lectures/DFA-FD.pdf</a></p>\n<p>Tai-e作业文档地址：<a href=\"https://tai-e.pascal-lab.net/intro/overview.html\">https://tai-e.pascal-lab.net/intro/overview.html</a></p>\n<p><strong>DFA-FD：Data Flow Analysis—–Foundations</strong></p>\n<h2 id=\"recall-the-iteration-algorithm：\"><a href=\"#recall-the-iteration-algorithm：\" class=\"headerlink\" title=\"recall the iteration algorithm：\"></a>recall the iteration algorithm：</h2><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671778298573-e683973a-b717-4903-a34a-eedc8567d66f.png\" alt=\"image.png\"></p>\n<h3 id=\"View-iterative-algorithm-in-another-way：\"><a href=\"#View-iterative-algorithm-in-another-way：\" class=\"headerlink\" title=\"View iterative algorithm in another way：\"></a>View iterative algorithm in another way：</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671778372918-70268e86-3e60-4e54-86c3-6b937369d770.png?x-oss-process=image/resize,w_905,limit_0\" alt=\"image.png\"></p>\n<p>就是字面意思，解释算法的含义。节点数，迭代一次节点更新，定义值域，定义k元组，设置元素。。。。。以及算法运转和停下的条件。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671778685338-94310cb5-0254-4e3b-977e-de95e0f42c32.png?x-oss-process=image/resize,w_903,limit_0\" alt=\"image.png\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671778733108-026eb44d-58e4-43c1-9fca-cb8fc391ef03.png\" alt=\"image.png\"></p>\n<p>据说是离散数学的知识，X是公式的不动点，这个算法到达不动点，停止。</p>\n<h3 id=\"Ask-some-question：\"><a href=\"#Ask-some-question：\" class=\"headerlink\" title=\"Ask some question：\"></a>Ask some question：</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671779141307-c5f72be2-fda3-4352-99fe-3a869b162e45.png\" alt=\"image.png\"></p>\n<h3 id=\"Partial-Order：\"><a href=\"#Partial-Order：\" class=\"headerlink\" title=\"Partial Order：\"></a>Partial Order：</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671779955875-8ce9ef7a-0f1d-401d-9cf1-ace722ad98fb.png?x-oss-process=image/resize,w_903,limit_0\" alt=\"image.png\"></p>\n<p>定义一个偏序就是一个集合一个关系，集合满足关系则是偏序集。就是上面三个条件，自反性，反对称（直接看符号就清楚了），传递性。的确很像等价关系。。。</p>\n<p>偏序的意思是这个集合中并不是两两之间构成这个关系。</p>\n<p>给了下面几个列子判断，是否是偏序集：</p>\n<ol>\n<li>整数集S，关系&lt;=     是</li>\n<li>整数集S，关系&lt;     不是</li>\n<li>整个英语单词，关系是子字符串     是</li>\n<li>一个set的所有子set包括{}和自己，关系是子set   是</li>\n</ol>\n<h2 id=\"Upper-and-Lower-Bounds：\"><a href=\"#Upper-and-Lower-Bounds：\" class=\"headerlink\" title=\"Upper and Lower Bounds：\"></a>Upper and Lower Bounds：</h2><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671780973511-47e13855-f153-494c-b375-9147c1019256.png\" alt=\"image.png\"></p>\n<p>按图中定义upper bound和lower bound。关系是子set，就是最多的set和空set</p>\n<p>upper bound的定义是大于等于，lower bound的定义是小于等于</p>\n<p>是在S里面全部进行比较</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671781147505-3c2676f3-e1bd-4ad5-a60f-9da31e2540dd.png?x-oss-process=image/resize,w_905,limit_0\" alt=\"image.png\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671781280371-b85a87cb-0e7d-437e-a977-1a445b7e02f1.png\" alt=\"image.png\"></p>\n<p>lub是upper bound里面最小的，glb是lower bound里最小的</p>\n<p>是在S里面全部进行比较</p>\n<p>所以lower bound只有{}，因为S中{a}同{b}无法比较。</p>\n<p>就是形象点看箭头指向就行了。</p>\n<h3 id=\"Some-Properties：\"><a href=\"#Some-Properties：\" class=\"headerlink\" title=\"Some Properties：\"></a>Some Properties：</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671781911495-58d13d4a-7b05-4b9f-8b44-55dac8ad8f1b.png\" alt=\"image.png\"></p>\n<p>一些性质：</p>\n<ol>\n<li>不是所有的偏序集都有最小上限和最大下限</li>\n<li>如果偏序集有最小上限和最大下限，那一定是唯一的</li>\n</ol>\n<p>根据前面偏序集的第二个条件，证明，得出如果有俩个，那么这两个就是相等的</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671782359804-110efeb9-2c01-4b68-a4bd-017487bfaf13.png\" alt=\"image.png\"></p>\n<p>一个偏序的集合中任意两个元素都有，最小上限和最大上限那么这个偏序就称为lattice</p>\n<p>判断是否是lattice：</p>\n<ol>\n<li>整数集S，关系&lt;=     是</li>\n<li>整个英语单词，关系是子字符串     不是，看箭头</li>\n</ol>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671782629494-57c128d5-58fb-4667-8237-0f925e964988.png\" alt=\"image.png\"></p>\n<ol start=\"3\">\n<li>一个set的所有子set包括{}和自己，关系是子set   是</li>\n</ol>\n<h3 id=\"Semilattice：\"><a href=\"#Semilattice：\" class=\"headerlink\" title=\"Semilattice：\"></a>Semilattice：</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671782836902-1843c8a0-e70f-44d0-b6a2-7231e9a77760.png\" alt=\"image.png\"></p>\n<p>前面是且的关系，这个是或的关系</p>\n<h3 id=\"Complete-Lattice：\"><a href=\"#Complete-Lattice：\" class=\"headerlink\" title=\"Complete Lattice：\"></a>Complete Lattice：</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671783006921-20fecdf6-4ce4-4313-b735-6ad734b584b0.png\" alt=\"image.png\"></p>\n<p>一个lattice的所有subset都有lub和glb，则这个lattice就是complete lattice</p>\n<p>判断下面例子是不是complete lattice：</p>\n<ol>\n<li>整数集S，关系&lt;=     无穷大，没有边界，不是</li>\n<li>一个set的所有子set包括{}和自己，关系是子set   是</li>\n</ol>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671783504379-85c5bc70-fe1a-415c-b2d2-c5177c7acc65.png?x-oss-process=image/resize,w_907,limit_0\" alt=\"image.png\"></p>\n<p>每一个有界的lattice是一个complete lattice。但是不是所有的complete lattice都是有界的lattice。</p>\n<h3 id=\"Product-lattice：\"><a href=\"#Product-lattice：\" class=\"headerlink\" title=\"Product lattice：\"></a>Product lattice：</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671783822753-829bab09-7c27-43ab-a93c-1fce9a085cdf.png\" alt=\"image.png\"></p>\n<p>product lattice的定义。</p>\n<p>一个product lattice是lattice</p>\n<p>如果product lattice是complete lattice的乘积（每一个都是complete lattice），那么这个product lattice也是complete lattice</p>\n<h2 id=\"Data-Flow-Analysis-Framework-via-Lattice：\"><a href=\"#Data-Flow-Analysis-Framework-via-Lattice：\" class=\"headerlink\" title=\"Data Flow Analysis Framework via Lattice：\"></a>Data Flow Analysis Framework via Lattice：</h2><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671784585680-7036aca2-b8f0-4dfe-83f7-7aeb908ca698.png?x-oss-process=image/resize,w_903,limit_0\" alt=\"image.png\"></p>\n<p>数据流分析框架有三个重要参数。D：表示数据流的方法，foreward或者backward。L：包含值V的域和满足n和u的lattice。F：从V到V的传递函数。</p>\n<p>数据流分析能看作是迭代应用传递函数和在lattice的值上的u/n操作</p>\n<h2 id=\"Peview-the-questions-we-have-seen-befor：\"><a href=\"#Peview-the-questions-we-have-seen-befor：\" class=\"headerlink\" title=\"Peview the questions we have seen befor：\"></a>Peview the questions we have seen befor：</h2><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671785295408-c6838dd3-3b6e-4838-9d1b-c9b47e3c9271.png\" alt=\"image.png\"></p>\n<ol>\n<li>跟单调性有关</li>\n<li>函数有多个不动点，是不是最好的？</li>\n</ol>\n<h3 id=\"Monotonicity-and-Fixed-point-Theorem：\"><a href=\"#Monotonicity-and-Fixed-point-Theorem：\" class=\"headerlink\" title=\"Monotonicity  and Fixed-point Theorem：\"></a>Monotonicity  and Fixed-point Theorem：</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671785712830-85c98619-ac72-4cf4-9f99-1e330e6668ec.png\" alt=\"image.png\"></p>\n<p>单调性：一个函数f：存在一个L是lattice，L是单调的，如果任意x，y属于L，上面公式</p>\n<p>不动点定理：一个complete lattice  L：<br>（1）L是单调的且L是有限的，这个f函数通过f(⊥)迭代到达的不动点是最小不动点</p>\n<p>（2）L是单调的且L是有限的，这个f函数通过f(T)迭代到达的不动点是最大不动点</p>\n<h3 id=\"Fixed-point-Theorem（Existence-of-Fixed-Point）：\"><a href=\"#Fixed-point-Theorem（Existence-of-Fixed-Point）：\" class=\"headerlink\" title=\"Fixed-point Theorem（Existence of Fixed Point）：\"></a>Fixed-point Theorem（Existence of Fixed Point）：</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671787016884-70c840e5-7e1e-4fd2-8866-d54d17255bbf.png\" alt=\"image.png\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671787040640-e68d844d-c819-4a2d-85bd-49f2d8fba81b.png\" alt=\"image.png\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671787061232-65e130f7-53bc-4b7b-bf2b-909bdadcf5a7.png\" alt=\"image.png\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671857619733-2b931973-9017-47d5-8113-4cb47d078588.png?x-oss-process=image/resize,w_937,limit_0\" alt=\"image.png\"></p>\n<p>不动点的性质已经证明了。但是，这不代表着迭代算法也有这种性质，所以，接下来要将两者关联起来。</p>\n<h3 id=\"Relate-Iterative-Algorithm-to-Fixed-point-Throrem：\"><a href=\"#Relate-Iterative-Algorithm-to-Fixed-point-Throrem：\" class=\"headerlink\" title=\"Relate Iterative Algorithm to Fixed-point Throrem：\"></a>Relate Iterative Algorithm to Fixed-point Throrem：</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671862657743-56f75489-f3bf-46e2-b4ec-df3758c3425c.png?x-oss-process=image/resize,w_937,limit_0\" alt=\"image.png\"></p>\n<p>如果一个product lattice 是由一些complete（and finite）lattices组成，那么这个product latttice也是complete（and finite）。</p>\n<p>每一次迭代可以用F函数等价：<br>（1）传递函数fi</p>\n<p>（2）meet/join函数 u/n</p>\n<p>现在需要证明F是单调的？</p>\n<h4 id=\"Prove-Function-F-is-Monotonic：\"><a href=\"#Prove-Function-F-is-Monotonic：\" class=\"headerlink\" title=\"Prove Function F is Monotonic：\"></a>Prove Function F is Monotonic：</h4><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671863399264-23511f49-deee-4b74-acd3-66497dff63f6.png?x-oss-process=image/resize,w_937,limit_0\" alt=\"image.png\"></p>\n<p>其中传递函数fi是单调的，只需证明join/meet函数是单调的</p>\n<p><strong>证明：</strong>任意x，y，z属于L，x #y（#表示图上符号)。想证明x u z # y u z通过u的定义，y#y u z</p>\n<p>通过transitivity #，x# y u z</p>\n<p>因为y u z是x的upper bound，也是z的upper bound 。所以x u z是x和z的least upper bound</p>\n<p>所以，x u z # y u z</p>\n<p>所以这个不动点定理应用在了数据流分析的迭代算法上。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671863955515-9ee3802e-3ddf-4184-81b9-a5652c2eff79.png?x-oss-process=image/resize,w_937,limit_0\" alt=\"image.png\"></p>\n<h3 id=\"When-Will-the-Algorithm-Reach-the-Fixed-Point？\"><a href=\"#When-Will-the-Algorithm-Reach-the-Fixed-Point？\" class=\"headerlink\" title=\"When Will the Algorithm Reach the Fixed Point？\"></a>When Will the Algorithm Reach the Fixed Point？</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671864430334-a4848617-6c61-4fd8-b400-3cc03326f958.png?x-oss-process=image/resize,w_937,limit_0\" alt=\"image.png\"></p>\n<p>这个h表示从top到bottom的最长路径。这里是3。每一次迭代，假设仅仅考虑一步（前进一步或是后退一步）在一个node上。</p>\n<p>假设这个lattice的height是h，并且在CFG上的node数目是k</p>\n<p>那么最多需要 i =h*k 次迭代</p>\n<p>这个i是到达不动点的最大迭代数</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671864718092-b8e63383-6e6d-4481-a1e6-5a6de8fac323.png?x-oss-process=image/resize,w_937,limit_0\" alt=\"image.png\"></p>\n<h2 id=\"May-and-Must-Analysis，a-Lattice-View：\"><a href=\"#May-and-Must-Analysis，a-Lattice-View：\" class=\"headerlink\" title=\"May and Must Analysis，a Lattice View：\"></a>May and Must Analysis，a Lattice View：</h2><p>记的不会太清楚，直接看那一段：<strong>30分钟多一点讲解</strong></p>\n<p><a href=\"https://www.bilibili.com/video/BV1964y1M7nL/?spm_id_from=pageDriver&amp;vd_source=6632b385bcaaeb6eb7c62e69b2587a3e\">https://www.bilibili.com/video/BV1964y1M7nL/?spm_id_from=pageDriver&amp;vd_source=6632b385bcaaeb6eb7c62e69b2587a3e</a></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671866282418-a06b21db-ca77-4522-ba3c-07d32371f695.png?x-oss-process=image/resize,w_937,limit_0\" alt=\"image.png\"></p>\n<h2 id=\"How-Precise-Is-Our-Solution？\"><a href=\"#How-Precise-Is-Our-Solution？\" class=\"headerlink\" title=\"How Precise Is Our Solution？\"></a>How Precise Is Our Solution？</h2><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671867640153-dd95c082-e06d-4bbe-b89e-02bd3b57de6c.png?x-oss-process=image/resize,w_937,limit_0\" alt=\"image.png\"></p>\n<p>MOP：满足所有路径的解决方案。</p>\n<p>MOP计算每条路径<strong>最终</strong>输出数据流值，并将join/meet应用于这些值，以找到 lub/glb</p>\n<p>一些路径可能不会被执行：不完全精确</p>\n<p>无边界，不可枚举：impractical</p>\n<h3 id=\"Ours（Iterative-Algorithm）vs-MOP：\"><a href=\"#Ours（Iterative-Algorithm）vs-MOP：\" class=\"headerlink\" title=\"Ours（Iterative Algorithm）vs. MOP：\"></a>Ours（Iterative Algorithm）vs. MOP：</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671868206155-5052602a-b20c-4a0d-b240-7d3dae86fbe6.png\" alt=\"image.png\"></p>\n<p>蓝色是迭代算法的处理流程，红色是MOP的处理流程</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671868629079-0f9fb130-47a6-4a91-9349-a052aeb10076.png?x-oss-process=image/resize,w_937,limit_0\" alt=\"image.png\"></p>\n<p>MOP和Ours的关系，MOP更准确。前面的几个问题都是distributive，所以MOP=Ours</p>\n<h2 id=\"Constant-Propagation：\"><a href=\"#Constant-Propagation：\" class=\"headerlink\" title=\"Constant Propagation：\"></a>Constant Propagation：</h2><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671868961574-b410f2de-a083-4b5b-a95f-fc9e947b847f.png?x-oss-process=image/resize,w_937,limit_0\" alt=\"image.png\"></p>\n<p>给定程序点p处变量x，看x在p处是否保持恒定值</p>\n<p>CFG中每个节点OUT包含一组对(x,v)，x是变量，v是该节点之后x所保持的值</p>\n<p>是must</p>\n<h3 id=\"Constant-Propagation-–-Lattice：\"><a href=\"#Constant-Propagation-–-Lattice：\" class=\"headerlink\" title=\"Constant Propagation – Lattice：\"></a>Constant Propagation – Lattice：</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671869530473-7ef79235-da6e-4853-a802-8bad7ea68c6a.png\" alt=\"image.png\"></p>\n<p>上面是关于meet之后的结果情况，其中UNDEF不是关注的重点</p>\n<h3 id=\"Constant-Propagation-–-Transfer-Function：\"><a href=\"#Constant-Propagation-–-Transfer-Function：\" class=\"headerlink\" title=\"Constant Propagation – Transfer Function：\"></a>Constant Propagation – Transfer Function：</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671869735581-8b380ea1-f74c-4e4a-8aa2-2a638c1190af.png?x-oss-process=image/resize,w_937,limit_0\" alt=\"image.png\"></p>\n<p>经过传递函数的实际的几种情况。</p>\n<h3 id=\"Constant-Propagation-–-Nondistributivity：\"><a href=\"#Constant-Propagation-–-Nondistributivity：\" class=\"headerlink\" title=\"Constant Propagation – Nondistributivity：\"></a>Constant Propagation – Nondistributivity：</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671870069358-c82762d4-3074-47ad-9d81-59dfbf73fcf2.png\" alt=\"image.png\"></p>\n<p>这部分有点不清楚，看看别人笔记。</p>\n<h2 id=\"Worklist-Algorithm，an-optimization-of-Iterative-Algorithm：\"><a href=\"#Worklist-Algorithm，an-optimization-of-Iterative-Algorithm：\" class=\"headerlink\" title=\"Worklist Algorithm，an optimization of Iterative Algorithm：\"></a>Worklist Algorithm，an optimization of Iterative Algorithm：</h2><h3 id=\"Review-Iterative-Algorithm-for-May-amp-Forword-Analysis：\"><a href=\"#Review-Iterative-Algorithm-for-May-amp-Forword-Analysis：\" class=\"headerlink\" title=\"Review Iterative Algorithm for May &amp; Forword Analysis：\"></a>Review Iterative Algorithm for May &amp; Forword Analysis：</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671870497211-80173dfb-80af-4e04-8ded-f95849352abf.png?x-oss-process=image/resize,w_937,limit_0\" alt=\"image.png\"></p>\n<h3 id=\"Worklist-Algorithm：\"><a href=\"#Worklist-Algorithm：\" class=\"headerlink\" title=\"Worklist Algorithm：\"></a>Worklist Algorithm：</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25696976/1671870530800-d55b0ac0-0fd9-479f-8cda-6036a6db9829.png?x-oss-process=image/resize,w_937,limit_0\" alt=\"image.png\"></p>\n<p>只计算变化的IN/OUT，放到worklist里面遍历，直到worklist为空，说明到达不动点，算法停止。</p>\n<h2 id=\"必会知识点：\"><a href=\"#必会知识点：\" class=\"headerlink\" title=\"必会知识点：\"></a>必会知识点：</h2><ol>\n<li>理解迭代算法功能图</li>\n<li>lattice和complete lattice的定义</li>\n<li>如何总结lattice中may和must分析</li>\n<li>理解不动点定理</li>\n<li>MOP于迭代算法产生的解之间的关系</li>\n<li>常量传播分析</li>\n<li>worklist algorithm</li>\n</ol>\n<h2 id=\"作业二：\"><a href=\"#作业二：\" class=\"headerlink\" title=\"作业二：\"></a>作业二：</h2><p><strong>Constant propagation and Worklist Solver</strong></p>\n<p>先不要动，看完再想</p>\n","text":" B站教程地址：https://www.bilibili.com/video/BV1A741117it/?spm_id_from=pageDriver&amp;vd_source=6632b385bcaaeb6eb7c62e69b2587a3e 英文文档地址：https://pa...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"软件分析","slug":"软件分析","count":7,"path":"api/categories/软件分析.json"}],"tags":[{"name":"Java","slug":"Java","count":22,"path":"api/tags/Java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#recall-the-iteration-algorithm%EF%BC%9A\"><span class=\"toc-text\">recall the iteration algorithm：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#View-iterative-algorithm-in-another-way%EF%BC%9A\"><span class=\"toc-text\">View iterative algorithm in another way：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Ask-some-question%EF%BC%9A\"><span class=\"toc-text\">Ask some question：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Partial-Order%EF%BC%9A\"><span class=\"toc-text\">Partial Order：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Upper-and-Lower-Bounds%EF%BC%9A\"><span class=\"toc-text\">Upper and Lower Bounds：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Some-Properties%EF%BC%9A\"><span class=\"toc-text\">Some Properties：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Semilattice%EF%BC%9A\"><span class=\"toc-text\">Semilattice：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Complete-Lattice%EF%BC%9A\"><span class=\"toc-text\">Complete Lattice：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Product-lattice%EF%BC%9A\"><span class=\"toc-text\">Product lattice：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Data-Flow-Analysis-Framework-via-Lattice%EF%BC%9A\"><span class=\"toc-text\">Data Flow Analysis Framework via Lattice：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Peview-the-questions-we-have-seen-befor%EF%BC%9A\"><span class=\"toc-text\">Peview the questions we have seen befor：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Monotonicity-and-Fixed-point-Theorem%EF%BC%9A\"><span class=\"toc-text\">Monotonicity  and Fixed-point Theorem：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Fixed-point-Theorem%EF%BC%88Existence-of-Fixed-Point%EF%BC%89%EF%BC%9A\"><span class=\"toc-text\">Fixed-point Theorem（Existence of Fixed Point）：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Relate-Iterative-Algorithm-to-Fixed-point-Throrem%EF%BC%9A\"><span class=\"toc-text\">Relate Iterative Algorithm to Fixed-point Throrem：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Prove-Function-F-is-Monotonic%EF%BC%9A\"><span class=\"toc-text\">Prove Function F is Monotonic：</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#When-Will-the-Algorithm-Reach-the-Fixed-Point%EF%BC%9F\"><span class=\"toc-text\">When Will the Algorithm Reach the Fixed Point？</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#May-and-Must-Analysis%EF%BC%8Ca-Lattice-View%EF%BC%9A\"><span class=\"toc-text\">May and Must Analysis，a Lattice View：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#How-Precise-Is-Our-Solution%EF%BC%9F\"><span class=\"toc-text\">How Precise Is Our Solution？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Ours%EF%BC%88Iterative-Algorithm%EF%BC%89vs-MOP%EF%BC%9A\"><span class=\"toc-text\">Ours（Iterative Algorithm）vs. MOP：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Constant-Propagation%EF%BC%9A\"><span class=\"toc-text\">Constant Propagation：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Constant-Propagation-%E2%80%93-Lattice%EF%BC%9A\"><span class=\"toc-text\">Constant Propagation – Lattice：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Constant-Propagation-%E2%80%93-Transfer-Function%EF%BC%9A\"><span class=\"toc-text\">Constant Propagation – Transfer Function：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Constant-Propagation-%E2%80%93-Nondistributivity%EF%BC%9A\"><span class=\"toc-text\">Constant Propagation – Nondistributivity：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Worklist-Algorithm%EF%BC%8Can-optimization-of-Iterative-Algorithm%EF%BC%9A\"><span class=\"toc-text\">Worklist Algorithm，an optimization of Iterative Algorithm：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Review-Iterative-Algorithm-for-May-amp-Forword-Analysis%EF%BC%9A\"><span class=\"toc-text\">Review Iterative Algorithm for May &amp; Forword Analysis：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Worklist-Algorithm%EF%BC%9A\"><span class=\"toc-text\">Worklist Algorithm：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BF%85%E4%BC%9A%E7%9F%A5%E8%AF%86%E7%82%B9%EF%BC%9A\"><span class=\"toc-text\">必会知识点：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%9C%E4%B8%9A%E4%BA%8C%EF%BC%9A\"><span class=\"toc-text\">作业二：</span></a></li></ol>","author":{"name":"Longw","slug":"blog-author","avatar":"https://userblink.csdnimg.cn/20211213/qq_57037477/pic/7db9b5c05ba342a75ddf06eecf740949-0.jpg","link":"/","description":"一个不想开挂的安全实习生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"南京大学软件分析--IA","uid":"7c0ae3fae65c1cc802990d3363df7f00","slug":"南京大学软件分析-IA","date":"2022-12-25T10:25:58.000Z","updated":"2022-12-26T08:38:33.044Z","comments":true,"path":"api/articles/南京大学软件分析-IA.json","keywords":null,"cover":[],"text":" B站教程地址：https://www.bilibili.com/video/BV1GQ4y1T7zm/?spm_id_from=pageDriver&amp;vd_source=6632b385bcaaeb6eb7c62e69b2587a3e 英文文档地址：https://pa...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"软件分析","slug":"软件分析","count":7,"path":"api/categories/软件分析.json"}],"tags":[{"name":"Java","slug":"Java","count":22,"path":"api/tags/Java.json"}],"author":{"name":"Longw","slug":"blog-author","avatar":"https://userblink.csdnimg.cn/20211213/qq_57037477/pic/7db9b5c05ba342a75ddf06eecf740949-0.jpg","link":"/","description":"一个不想开挂的安全实习生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"南京大学软件分析--DFA-AP","uid":"7843e3842ab5cae178372dfeef42c5ae","slug":"南京大学软件分析-DFA-AP","date":"2022-12-21T12:50:14.000Z","updated":"2023-04-21T10:26:43.524Z","comments":true,"path":"api/articles/南京大学软件分析-DFA-AP.json","keywords":null,"cover":[],"text":" B站教程地址：https://www.bilibili.com/video/BV1oE411K79d/?spm_id_from=pageDriver&amp;vd_source=6632b385bcaaeb6eb7c62e69b2587a3e 英文文档地址：https://pa...","link":"","photos":[],"count_time":{"symbolsCount":"5.3k","symbolsTime":"5 mins."},"categories":[{"name":"软件分析","slug":"软件分析","count":7,"path":"api/categories/软件分析.json"}],"tags":[{"name":"Java","slug":"Java","count":22,"path":"api/tags/Java.json"}],"author":{"name":"Longw","slug":"blog-author","avatar":"https://userblink.csdnimg.cn/20211213/qq_57037477/pic/7db9b5c05ba342a75ddf06eecf740949-0.jpg","link":"/","description":"一个不想开挂的安全实习生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}